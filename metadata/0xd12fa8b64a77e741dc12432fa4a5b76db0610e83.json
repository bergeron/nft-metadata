{
  "address": "0xd12fa8b64a77e741dc12432fa4a5b76db0610e83",
  "type": "ERC721",
  "name": "‚ñë‚ñí‚ñì‚ñà ◊ß–≥ùï†ùêÇùî¢ùì≠ùì§Â∞∫·ó©ùêã «§‚í∫‚ÑïŒ≠ùê´ùîû‰∏ÖÔΩâœÉùìù ‚ñà‚ñì‚ñí‚ñë",
  "tokenCount": "1",
  "uri": "data:application/json;base64,eyJuYW1lIjogIuKWkeKWkuKWk+KWiCDXp9Cz8J2VoPCdkILwnZSi8J2TrfCdk6TlsLrhl6nwnZCLIMek4pK64oSVzq3wnZCr8J2UnuS4he+9ic+D8J2TnSDilojilpPilpLilpEgMS8xMDAiLCAiZGVzY3JpcHRpb24iOiAiSW4gY29tcHV0aW5nLCBwcm9jZWR1cmFsIG9yIHByb2NlZHVyYWwgZ2VuZXJhdGlvbiBpcyB0aGUgbWV0aG9kIG9mIGNyZWF0aW5nIGRhdGEgd2l0aCBhbGdvcml0aG1zIGluc3RlYWQgb2YgbWFudWFsbHkuIFRoaXMgbWVhbnMgdGhhdCB0aGUgYWxnb3JpdGhtcyB0aGF0IHBlcmZvcm0gdGhpcyB0eXBlIG9mIG9wZXJhdGlvbiBhcmUgd2l0aGluIHRoZSBjbGFzc2lmaWNhdGlvbiBvZiByZWN1cnNpdmUgb3IgcmVjdXJzaXZlIGFsZ29yaXRobXMuIEluIHNpbXBsZXIgdGVybXMsIGVhY2ggcGl4ZWwgaGFzIGJlZW4gYXNzaWduZWQgYSBmdW5jdGlvbiB1c2luZyB0aGUgRXVjbGlkZWFuIGRpc3RhbmNlIChvciB0aGUgTWlua293c2tpIERpc3RhbmNlIHdpdGggcD0yKVxuXG5UaGUgc291bmQgaW4gdGhpcyBwaWVjZSwgZm9yIGV4YW1wbGUsIGlzIGdlbmVyYXRlZCBpbiB0aGlzIHdheSBhbmQgaGFzIGFwcGxpY2F0aW9ucyBpbiBpdHMgYXVkaW8gc3ludGhlc2lzLlxuXG5NYWRlIHdpdGggY29kZSBpbiBIeWRyYSAvIFN1cGVyQ29sbGlkZXIgXG5NUDQgRm9ybWF0IHwgSDI2NCBcbkFydCBieSBEYW5pZWwgT3JvcGV6YSBcblR3aXR0ZXI6QGZlcmRvcm9wZXphIFxuQ29tcG9zZXIgfCBDcmVhdGl2ZSBDb2RlciB8IE11bHRpZGlzY2lwbGluYXJ5IEFydGlzdCIsICJpbWFnZSI6ICJpcGZzOi8vYmFma3JlaWFla3I3Z3E0am9oZWdpN3JsZHdnc2N6bHh5aW14ejR4bW11Z2lnb2NheXBxc3FkNWJqN3EiLCAiYW5pbWF0aW9uX3VybCI6ICJpcGZzOi8vYmFmeWJlaWRzNTRyc2Y2eG9tNDU3aG1tZHNpY3puZTJtdGxpdnZ1Ym1qNXdyajdkdmZwZ3ZpdG1vcnkiLCAicHJvcGVydGllcyI6IHsibnVtYmVyIjogMSwgIm5hbWUiOiAi4paR4paS4paT4paIINen0LPwnZWg8J2QgvCdlKLwnZOt8J2TpOWwuuGXqfCdkIsgx6TikrrihJXOrfCdkKvwnZSe5LiF772Jz4PwnZOdIOKWiOKWk+KWkuKWkSJ9fQ==",
  "metadata": "{\"name\": \"b\u0016\u0011b\u0016\u0012b\u0016\u0013b\u0016\b W'P3p\u001d\u0015 p\u001d\u0010\u0002p\u001d\u0014\"p\u001d\u0013-p\u001d\u0013$e0:a\u0017)p\u001d\u0010\u000b G$b\u0012:b\u0004\u0015N-p\u001d\u0010+p\u001d\u0014\u001ed8\u0005o=\tO\u0003p\u001d\u0013\u001d b\u0016\bb\u0016\u0013b\u0016\u0012b\u0016\u0011 1/100\", \"description\": \"In computing, procedural or procedural generation is the method of creating data with algorithms instead of manually. This means that the algorithms that perform this type of operation are within the classification of recursive or recursive algorithms. In simpler terms, each pixel has been assigned a function using the Euclidean distance (or the Minkowski Distance with p=2)\\n\\nThe sound in this piece, for example, is generated in this way and has applications in its audio synthesis.\\n\\nMade with code in Hydra / SuperCollider \\nMP4 Format | H264 \\nArt by Daniel Oropeza \\nTwitter:@ferdoropeza \\nComposer | Creative Coder | Multidisciplinary Artist\", \"image\": \"ipfs://bafkreiaekr7gq4johegi7rldwgsczlxyimxz4xmmugigocaypqsqd5bj7q\", \"animation_url\": \"ipfs://bafybeids54rsf6xom457hmmdsiczne2mtlivvubmj5wrj7dvfpgvitmory\", \"properties\": {\"number\": 1, \"name\": \"b\u0016\u0011b\u0016\u0012b\u0016\u0013b\u0016\b W'P3p\u001d\u0015 p\u001d\u0010\u0002p\u001d\u0014\"p\u001d\u0013-p\u001d\u0013$e0:a\u0017)p\u001d\u0010\u000b G$b\u0012:b\u0004\u0015N-p\u001d\u0010+p\u001d\u0014\u001ed8\u0005o=\tO\u0003p\u001d\u0013\u001d b\u0016\bb\u0016\u0013b\u0016\u0012b\u0016\u0011\"}}"
}