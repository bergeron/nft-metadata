{
  "address": "0x266fbcf5d358c4d48474834b1c70dfb73a48efab",
  "type": "ERC721",
  "name": "Official Bionic Apes Collection",
  "tokenCount": "5555",
  "uri": "https://mint.bapes.io/api/pages/getnft/1",
  "metadata": "<pre class=\"cake-error\"><a href=\"javascript:void(0);\" onclick=\"document.getElementById('cakeErr64952205d5ab6-trace').style.display = (document.getElementById('cakeErr64952205d5ab6-trace').style.display == 'none' ? '' : 'none');\"><b>Warning</b> (2)</a>: Invalid argument supplied for foreach() [<b>APP/Controller/PagesController.php</b>, line <b>3052</b>]<div id=\"cakeErr64952205d5ab6-trace\" class=\"cake-stack-trace\" style=\"display: none;\"><a href=\"javascript:void(0);\" onclick=\"document.getElementById('cakeErr64952205d5ab6-code').style.display = (document.getElementById('cakeErr64952205d5ab6-code').style.display == 'none' ? '' : 'none')\">Code</a> <a href=\"javascript:void(0);\" onclick=\"document.getElementById('cakeErr64952205d5ab6-context').style.display = (document.getElementById('cakeErr64952205d5ab6-context').style.display == 'none' ? '' : 'none')\">Context</a><pre id=\"cakeErr64952205d5ab6-code\" class=\"cake-code-dump\" style=\"display: none;\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\"></span></span></code>\n<span class=\"code-highlight\"><code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: #007700\">foreach&nbsp;(</span><span style=\"color: #0000BB\">$asda&nbsp;</span><span style=\"color: #007700\">as&nbsp;</span><span style=\"color: #0000BB\">$dd</span><span style=\"color: #007700\">)&nbsp;{</span></span></code></span>\n<code><span style=\"color: #000000\"><span style=\"color: #0000BB\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">totalMinted&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">$dd</span><span style=\"color: #007700\">-&gt;</span><span style=\"color: #0000BB\">value</span><span style=\"color: #007700\">;</span></span></code></pre><pre id=\"cakeErr64952205d5ab6-context\" class=\"cake-context cake-debug\" style=\"display: none;\">$err = <style type=\"text/css\">\n.cake-debug {\n  --color-bg: #ECECE9;\n  --color-highlight-bg: #fcf8e3;\n  --color-control-bg: hsla(0, 0%, 50%, 0.2);\n\n  --color-orange: #c44f24;\n  --color-green: #0b6125;\n  --color-violet: #a71d5d;\n  --color-blue: #4070a0;\n  --color-grey: #5f5f5f;\n\n  --color-dark-grey: #222;\n  --color-cyan: #234aa0;\n  --color-red: #d33c44;\n\n  --indent: 20px;\n\n  font-family: monospace;\n  background: var(--color-bg);\n  padding: 5px;\n  line-height: 16px;\n  font-size: 14px;\n  margin-bottom: 10px;\n  position: relative;\n}\n.cake-debug:last-child {\n  margin-bottom: 0;\n}\n.cake-debug > span {\n  display: block;\n  margin-bottom: 10px;\n  color: var(--color-dark-grey);\n}\n\n.cake-dbg-object {\n  display: inline;\n}\n.cake-dbg-object[data-highlighted=true],\n.cake-dbg-object[data-highlighted=true] samp {\n  background: var(--color-highlight-bg);\n}\n\n/*\nArray item container and each items are blocks so\nnesting works.\n*/\n.cake-dbg-object-props,\n.cake-dbg-array-items {\n  display: block;\n}\n.cake-dbg-prop,\n.cake-dbg-array-item {\n  display: block;\n  padding-left: var(--indent);\n  min-height: 18px;\n}\n\n/** Collapser buttons **/\n[data-hidden=true] {\n  display: none;\n}\n\n.cake-dbg-collapse {\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  vertical-align: middle;\n  border-radius: 3px;\n  color: var(--color-blue);\n\n  background: var(--color-control-bg);\n  /* Image is an rawurlencoded SVG */\n  background-image: url(\"data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20height%3D%2212%22%20width%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%3E%3Cpolygon%20points%3D%223%2C1%203%2C11%208%2C6%22 style%3D%22fill%3A%234070a0%3B%22%2F%3E%3C%2Fsvg%3E\");\n  background-position: 2px 1px;\n  background-repeat: no-repeat;\n}\n.cake-dbg-collapse[data-open=true] {\n  transform: rotate(90deg);\n}\n/* Copy button */\n.cake-dbg-copy {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  padding: 6px;\n  background: var(--color-control-bg);\n  color: var(--color-blue);\n  border-radius: 0 0 0 3px;\n}\n\n/* Textual elements */\n.cake-dbg-class {\n  color: var(--color-cyan);\n}\n.cake-dbg-property {\n  color: var(--color-dark-grey);\n}\n.cake-dbg-visibility {\n  color: var(--color-violet);\n}\n.cake-dbg-punct {\n  color: var(--color-grey);\n}\n.cake-dbg-string {\n  color: var(--color-green);\n  white-space: pre-wrap;\n}\n.cake-dbg-number {\n  font-weight: bold;\n  color: var(--color-blue);\n}\n.cake-dbg-const {\n  color: var(--color-yellow);\n  font-weight: bold;\n}\n.cake-dbg-ref {\n  color: var(--color-red);\n}\n.cake-dbg-special {\n  color: var(--color-red);\n  font-style: italic;\n}\n</style>\n<script type=\"text/javascript\">\n(function (win, doc) {\n\nfunction initialize() {\n  createCollapsibles(doc.querySelectorAll('.cake-dbg-array-items'));\n  createCollapsibles(doc.querySelectorAll('.cake-dbg-object-props'));\n  attachRefEvents(doc.querySelectorAll('.cake-dbg'));\n  openBlocks(doc.querySelectorAll('.cake-debug[data-open-all=\"true\"]'));\n  attachCopyButton(doc.querySelectorAll('.cake-dbg'));\n}\n// Add a name on window so DebugKit can add controls to dump blocks\nwin.__cakeDebugBlockInit = initialize;\n\n/**\n * Open all the collapsed sections in a block.\n */\nfunction openBlocks(blocks) {\n  blocks.forEach(function (block) {\n    block.querySelectorAll('.cake-dbg-collapse[data-open=\"false\"]').forEach(function (el) {\n      el.click();\n    });\n  });\n}\n\n/**\n * Create collapse toggles and attach events\n */\nfunction createCollapsibles(nodes) {\n  nodes.forEach(function (node) {\n    // Hide the childnode container if it is not\n    // a direct parent of the container.\n    if (!node.parentNode.parentNode.classList.contains('cake-dbg')) {\n      node.dataset.hidden = true;\n    }\n\n    // Don't show toggles for empty arrays/objects\n    if (node.childNodes.length == 0) {\n      return;\n    }\n\n    var collapser = doc.createElement('a');\n    collapser.classList.add('cake-dbg-collapse');\n    collapser.dataset.open = !node.dataset.hidden;\n    collapser.setAttribute('href', '#')\n    collapser.setAttribute('title', 'Toggle items');\n\n    // Add open/close behavior\n    collapser.addEventListener('click', function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      node.dataset.hidden = node.dataset.hidden === 'true' ? 'false' : 'true';\n      collapser.dataset.open = collapser.dataset.open === 'true' ? 'false' : 'true';\n    });\n\n    node.parentNode.insertBefore(collapser, node);\n  });\n}\n\n/**\n * When ref links are clicked open the path to that\n * element and highlight the reference\n */\nfunction attachRefEvents(nodes) {\n  nodes.forEach(function (container) {\n    var refLinks = container.querySelectorAll('.cake-dbg-ref');\n    refLinks.forEach(function (ref) {\n      ref.addEventListener('click', function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        var target = document.getElementById(ref.getAttribute('href').substr(1));\n        openPath(container, target);\n      });\n    });\n  });\n}\n\nfunction openPath(container, target) {\n  // Open the target element\n  var expander = target.querySelector('.cake-dbg-collapse');\n  if (expander.dataset.open === 'false') {\n    expander.click();\n  }\n  container.querySelectorAll('.cake-dbg-object').forEach(function (el) {\n    el.dataset.highlighted = 'false';\n  })\n  target.dataset.highlighted = 'true';\n\n  var current = target;\n  // Traverse up the tree opening all closed containers.\n  while (true) {\n    var parent = current.parentNode;\n    if (parent == container) {\n      break;\n    }\n    if (parent.classList.contains('cake-dbg-object') || parent.classList.contains('cake-dbg-array')) {\n      expander = parent.querySelector('.cake-dbg-collapse');\n      if (expander.dataset.open === 'false') {\n        expander.click();\n      }\n    }\n    current = parent;\n  }\n}\n\n// https://www.30secondsofcode.org/js/s/copy-to-clipboard\nfunction copyToClipboard (str) {\n  var el = document.createElement('textarea');\n  el.value = str;\n  el.setAttribute('readonly', '');\n  el.style.position = 'absolute';\n  el.style.left = '-9999px';\n  document.body.appendChild(el);\n  var selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n  if (selected) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n}\n\nfunction attachCopyButton(nodes) {\n  nodes.forEach(function (container) {\n    var copy = doc.createElement('a');\n    copy.classList.add('cake-dbg-copy');\n    copy.setAttribute('href', '#');\n    copy.setAttribute('title', 'Copy contents of debug output');\n    copy.appendChild(doc.createTextNode('Copy'));\n\n    // Add copy behavior\n    copy.addEventListener('click', function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var lineNo = '';\n      if (container.parentNode && container.parentNode.classList.contains('cake-debug')) {\n        var line = container.parentNode.querySelector('span');\n        lineNo = line.textContent + \"\\n\";\n      }\n\n      // Chop off last 4 to exclude copy button text.\n      copyToClipboard(lineNo + container.textContent.substring(0, container.textContent.length - 4));\n    });\n\n    container.appendChild(copy);\n  });\n}\n\ndoc.addEventListener('DOMContentLoaded', initialize);\n}(window, document))\n</script>\n<div class=\"cake-dbg\"><span class=\"cake-dbg-object\" id=\"cake-db-object-64952205d596d6.06229945-0\"><span class=\"cake-dbg-punct\">object(</span><span class=\"cake-dbg-class\">GuzzleHttp\\Exception\\ClientException</span><span class=\"cake-dbg-punct\">) id:</span><span class=\"cake-dbg-number\">0</span><span class=\"cake-dbg-punct\"> {</span><samp class=\"cake-dbg-object-props\">\n  <span class=\"cake-dbg-prop\"><span class=\"cake-dbg-visibility\">protected</span> <span class=\"cake-dbg-property\">message</span><span class=\"cake-dbg-punct\"> =&gt; </span><span class=\"cake-dbg-string\">&#039;Client error: `POST https://smart-fragrant-tab.quiknode.pro/` resulted in a `403 Forbidden` response:\nendpoint is disabled at quicknode.com\n&#039;</span></span>\n  <span class=\"cake-dbg-prop\"><span class=\"cake-dbg-visibility\">protected</span> <span class=\"cake-dbg-property\">code</span><span class=\"cake-dbg-punct\"> =&gt; </span><span class=\"cake-dbg-visibility\">(int)</span> <span class=\"cake-dbg-number\">403</span></span>\n  <span class=\"cake-dbg-prop\"><span class=\"cake-dbg-visibility\">protected</span> <span class=\"cake-dbg-property\">file</span><span class=\"cake-dbg-punct\"> =&gt; </span><span class=\"cake-dbg-string\">&#039;/home2/mintbapes/public_html/api/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php&#039;</span></span>\n  <span class=\"cake-dbg-prop\"><span class=\"cake-dbg-visibility\">protected</span> <span class=\"cake-dbg-property\">line</span><span class=\"cake-dbg-punct\"> =&gt; </span><span class=\"cake-dbg-visibility\">(int)</span> <span class=\"cake-dbg-number\">113</span></span></samp>\n<span class=\"cake-dbg-punct\">}</span></span></div>\n$asda = <div class=\"cake-dbg\"><span class=\"cake-dbg-const\">null</span></div></pre><pre class=\"stack-trace\">App\\Controller\\PagesController::App\\Controller\\{closure}() - APP/Controller/PagesController.php, line 3052\ncall_user_func - [internal], line ??\nWeb3\\Contract::Web3\\{closure}() - ROOT/vendor/sc0vu/web3.php/src/Contract.php, line 663\ncall_user_func - [internal], line ??\nWeb3\\Providers\\HttpProvider::Web3\\Providers\\{closure}() - ROOT/vendor/sc0vu/web3.php/src/Providers/HttpProvider.php, line 52\ncall_user_func - [internal], line ??\nWeb3\\RequestManagers\\HttpRequestManager::sendPayload() - ROOT/vendor/sc0vu/web3.php/src/RequestManagers/HttpRequestManager.php, line 111\nWeb3\\Providers\\HttpProvider::send() - ROOT/vendor/sc0vu/web3.php/src/Providers/HttpProvider.php, line 62\nWeb3\\Eth::__call() - ROOT/vendor/sc0vu/web3.php/src/Eth.php, line 105\nWeb3\\Contract::call() - ROOT/vendor/sc0vu/web3.php/src/Contract.php, line 668\nApp\\Controller\\PagesController::getTotalMintCountReturn() - APP/Controller/PagesController.php, line 3055\nApp\\Controller\\PagesController::getnft() - APP/Controller/PagesController.php, line 2609\nCake\\Controller\\Controller::invokeAction() - CORE/src/Controller/Controller.php, line 531\nCake\\Controller\\ControllerFactory::invoke() - CORE/src/Controller/ControllerFactory.php, line 149\nCake\\Http\\BaseApplication::handle() - CORE/src/Http/BaseApplication.php, line 313\nCake\\Http\\Runner::handle() - CORE/src/Http/Runner.php, line 77\nCake\\Http\\Middleware\\CsrfProtectionMiddleware::process() - CORE/src/Http/Middleware/CsrfProtectionMiddleware.php, line 159</pre></div></pre>{\"name\":\"BAPE #1\",\"description\":\"5,555 unique Bionic Apes are the first robotic ape species on the blockchain. Surviving the Robopacolypse and gracefully willing to be held by their new owners. Focused on flourishing a community of positivity, self-growth. Join our Bionic force and grow with us together, forever.\",\"image\":\"https:\\/\\/mint.bapes.io\\/api\\/5555\\/5555\\/BAPES1649109042508517339935166984_1.png\",\"attributes\":{\"background\":\"Golden Yellow\",\"body\":\"Steel Body\",\"face\":\"Tongue Out\",\"accessories\":\"Hoop Earring\",\"eyes\":\"Pixel Shades\"}}"
}