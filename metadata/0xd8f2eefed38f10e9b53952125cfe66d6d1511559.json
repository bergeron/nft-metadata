{
  "address": "0xd8f2eefed38f10e9b53952125cfe66d6d1511559",
  "type": "ERC721",
  "name": "CLAY GENESIS",
  "tokenCount": "3333",
  "uri": "data:application/json;base64,eyJuYW1lIjoiQ0xBWSAjMSIsICJkZXNjcmlwdGlvbiI6IkNMQVkgaXMgYSBmdWxseSBvbi1jaGFpbiAzRCBnZW5lcmF0aXZlIGFydCBwcm9qZWN0LiBUaGUgY29kZSBpcyB0aGUgYXJ0LCB0aGUgYXJ0IGlzIHRoZSBjb2RlLiIsICJpbWFnZSI6ICJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSEJ5WlhObGNuWmxRWE53WldOMFVtRjBhVzg5SW5oTmFXNVpUV2x1SUcxbFpYUWlJSGRwWkhSb1BTSTFNREFpSUdobGFXZG9kRDBpTlRBd0lqNDhkR1Y0ZENCbWIyNTBMV1poYldsc2VUMGljMkZ1Y3kxelpYSnBaaUlnWm05dWRDMXphWHBsUFNJMU5pSWdabTl1ZEMxM1pXbG5hSFE5SWpJd01DSWdiR1YwZEdWeUxYTndZV05wYm1jOUlpMHhMakV5SWlCMGNtRnVjMlp2Y20wOUluUnlZVzV6YkdGMFpTZ3pPVGd1TmpNZ05EVTFMamN4S1NJK1BIUnpjR0Z1SUhnOUlpMDROQzR3TkNJZ2VUMGlNVGd1TURZaVBrTThMM1J6Y0dGdVBqeDBjM0JoYmlCNFBTSXRORFl1TlRJaUlIazlJakU0TGpBMklqNU1QQzkwYzNCaGJqNDhkSE53WVc0Z2VEMGlMVEUwTGpJeElpQjVQU0l4T0M0d05pSStRVHd2ZEhOd1lXNCtQSFJ6Y0dGdUlIZzlJakU1TGpraUlIazlJakU0TGpBMklqNVpQQzkwYzNCaGJqNDhkSE53WVc0Z2VEMGlOVFV1TWpraUlIazlJakU0TGpBMklqNWZQQzkwYzNCaGJqNDhMM1JsZUhRK1BIUmxlSFFnWm05dWRDMW1ZVzFwYkhrOUluTmhibk10YzJWeWFXWWlJR1p2Ym5RdGMybDZaVDBpTVRVaUlHWnZiblF0ZDJWcFoyaDBQU0l6TURBaUlIUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLREkwT0NBeE9Ta2lQangwYzNCaGJpQjRQU0l0TmpZdU9EY2lJSGs5SWpJdU1qZ2lQazl3Wlc0Z2RHOGdjMlZsSURORUlIWnBaWGM4TDNSemNHRnVQand2ZEdWNGRENDhjR0YwYUNCa1BTSk5Nekl5TGpZMU5DQXhOek11TURVelRERTRPUzQzTnlBeE5UVXVNelF5YkRJMkxqY3dNaUF4TWpNdU1Ea3lMVEV3TVM0ek16WWdORFV1TVRBM0lESTJOUzQzTWpnZ01qRXVNVEUzTFRnMkxqY3lPQzAyTWk0eE16ZDZJaUJtYVd4c1BTSnlaMklvTVRNd0xERXdNU3c0TWlraUx6NDhjR0YwYUNCa1BTSk5NVGsyTGprME55QXhPRGd1T0RRNWJESTRMakExT0MweU9DNDNORFFnTVRFdU5qUTRJREV1TlRreUxUTTNMakUySURNNExqVTNPSG9pSUdacGJHdzlJbkpuWWlneE16QXNNVEF4TERneUtTSXZQand2YzNablBnPT0iLCJhdHRyaWJ1dGVzIjogW3sidHJhaXRfdHlwZSI6IkJhc2UiLCJ2YWx1ZSI6IkNsYXkifSx7InRyYWl0X3R5cGUiOiJPcmUiLCJ2YWx1ZSI6IlJ1YnkifSx7InRyYWl0X3R5cGUiOiJIYXNFeWVzIiwidmFsdWUiOiJObyJ9LHsidHJhaXRfdHlwZSI6Ikhhc01vdXRoIiwidmFsdWUiOiJZZXMifSx7InRyYWl0X3R5cGUiOiJCZ0NvbG9yIiwidmFsdWUiOiJNb3VudGFpbiJ9LHsidHJhaXRfdHlwZSI6IkxhcmdlT3JlIiwidmFsdWUiOiJObyJ9LHsidHJhaXRfdHlwZSI6IlNlZWQiLCJ2YWx1ZSI6IjYyNDkwIn0seyJ0cmFpdF90eXBlIjoiTXVkIiwidmFsdWUiOjYzNDB9XSwiaW1hZ2UiOiJodHRwczovL3Byb3h5LndlYXJlY2xheS53b3JrZXJzLmRldi8/aWQ9MSIsICJhbmltYXRpb25fdXJsIjoiZGF0YTp0ZXh0L2h0bWw7YmFzZTY0LFBHaDBiV3crUEdobFlXUStQRzFsZEdFZ2JtRnRaVDBpZG1sbGQzQnZjblFpSUdOdmJuUmxiblE5SW5kcFpIUm9QV1JsZG1salpTMTNhV1IwYUN3Z2FXNXBkR2xoYkMxelkyRnNaVDB4SWo0OGMzUjViR1UrWW05a2VTeG9kRzFzZTJobGFXZG9kRG94TURBbE8yMWhjbWRwYmpvd08yOTJaWEptYkc5M09taHBaR1JsYmp0d1lXUmthVzVuT2pBN2QybGtkR2c2TVRBd0pYMWpZVzUyWVhON1ltOTBkRzl0T2pBN2FHVnBaMmgwT2pFd01IWjNPMnhsWm5RNk1EdHRZWEpuYVc0NllYVjBienR0WVhndGFHVnBaMmgwT2pFd01IWm9PMjFoZUMxM2FXUjBhRG94TURCMmFEdHdiM05wZEdsdmJqcGhZbk52YkhWMFpUdHlhV2RvZERvd08zUnZjRG93TzNkcFpIUm9PakV3TUhaM2ZUd3ZjM1I1YkdVK1BDOW9aV0ZrUGp4aWIyUjVQaUE4WTJGdWRtRnpJR2xrUFNKeVpXNWtaWEpEWVc1MllYTWlQand2WTJGdWRtRnpQaUE4TDJKdlpIaytQQzlvZEcxc1BqeHpZM0pwY0hRZ2RIbHdaVDBpYlc5a2RXeGxJajVtZFc1amRHbHZiaUJsS0dVcGUzSmxkSFZ5YmlCbEppWmxMbDlmWlhOTmIyUjFiR1UvWlM1a1pXWmhkV3gwT21WOVpuVnVZM1JwYjI0Z2RDaGxLWHR5WlhSMWNtNGdablZ1WTNScGIyNG9LWHQyWVhJZ2REMWxLejB4T0RNeE5UWTFPREV6TzNKbGRIVnliaUIwUFUxaGRHZ3VhVzExYkNoMFhuUStQajR4TlN3eGZIUXBMQ2dvS0hSZVBYUXJUV0YwYUM1cGJYVnNLSFJlZEQ0K1BqY3NOakY4ZENrcFhuUStQajR4TkNrK1BqNHdLUzgwTWprME9UWTNNamsyZlgxbWRXNWpkR2x2YmlCaEtHVXNZU3hwS1h0MGFHbHpMbmRwWkhSb1BXVXNkR2hwY3k1b1pXbG5hSFE5WVN4MGFHbHpMbkpoYm1SelpXVmtQV2tzZEdocGN5NW5jbUZrYVdWdWRITTlibVYzSUVGeWNtRjVLR1VxWVNveUtUdG1iM0lvZG1GeUlHODlkQ2hwS1N4eVBUQTdjangwYUdsekxtZHlZV1JwWlc1MGN5NXNaVzVuZEdnN2NpczlNaWw3ZG1GeUlHNHNjeXhzUFc4b0tTcE5ZWFJvTGxCSktqSTdiajFOWVhSb0xuTnBiaWhzS1N4elBVMWhkR2d1WTI5ektHd3BMSFJvYVhNdVozSmhaR2xsYm5SelczSmRQVzRzZEdocGN5NW5jbUZrYVdWdWRITmJjaXN4WFQxemZYUm9hWE11Wkc5MFBXWjFibU4wYVc5dUtHVXNkQ3hoTEdrcGUzWmhjaUJ2UFRJcUtHVXJkQ3AwYUdsekxuZHBaSFJvS1R0eVpYUjFjbTRnZEdocGN5NW5jbUZrYVdWdWRITmJiMTBxWVN0MGFHbHpMbWR5WVdScFpXNTBjMXR2S3pGZEttbDlMSFJvYVhNdWJHVnljRDFtZFc1amRHbHZiaWhsTEhRc1lTbDdjbVYwZFhKdUlHVXJZU29vZEMxbEtYMHNkR2hwY3k1elEzVnlkbVU5Wm5WdVkzUnBiMjRvWlNsN2NtVjBkWEp1SUdVcVpTb29NeTB5S21VcGZTeDBhR2x6TG1kbGRGWmhiSFZsUFdaMWJtTjBhVzl1S0dVc2RDbDdkbUZ5SUdFOVRXRjBhQzVtYkc5dmNpaGxLU3hwUFUxaGRHZ3VabXh2YjNJb2RDa3NiejFsTFdFc2NqMTBMV2tzYmoxaExITTlhU3hzUFdFOVBUMTBhR2x6TG5kcFpIUm9MVEUvTURwaEt6RXNZejFwUFQwOWRHaHBjeTVvWldsbmFIUXRNVDh3T21rck1TeG9QWFJvYVhNdVpHOTBLRzRzY3l4dkxISXBMSFk5ZEdocGN5NWtiM1FvYkN4ekxHOHRNU3h5S1N4QlBYUm9hWE11Wkc5MEtHNHNZeXh2TEhJdE1Ta3NkVDEwYUdsekxtUnZkQ2hzTEdNc2J5MHhMSEl0TVNrc1pqMTBhR2x6TG14bGNuQW9hQ3gyTEhSb2FYTXVjME4xY25abEtHOHBLU3hrUFhSb2FYTXViR1Z5Y0NoQkxIVXNkR2hwY3k1elEzVnlkbVVvYnlrcE8zSmxkSFZ5YmlCMGFHbHpMbXhsY25Bb1ppeGtMSFJvYVhNdWMwTjFjblpsS0hJcEtYMTlZMnhoYzNNZ2FYdGpiMjV6ZEhKMVkzUnZjaWhsTEhRcGUzUm9hWE11ZDJsa2RHZzlaU3gwYUdsekxtaGxhV2RvZEQxMExIUm9hWE11WkdGMFlUMXVaWGNnUVhKeVlYa29aU3AwS2pRcGZYTmxkRkpuWW1Fb1pTeDBMR0VzYVN4dkxISXBlM1poY2lCdVBUUXFLSFFxZEdocGN5NTNhV1IwYUN0bEtUdDBhR2x6TG1SaGRHRmJibDA5WVN4MGFHbHpMbVJoZEdGYmJpc3hYVDFwTEhSb2FYTXVaR0YwWVZ0dUt6SmRQVzhzZEdocGN5NWtZWFJoVzI0ck0xMDljbjFqY21WaGRHVlVkWEppZFd4bGJtTmxLR1VwZTJVdVkyOXNiM0k3Wm05eUtIWmhjaUIwUFc1bGR5QkJjbkpoZVNoMGFHbHpMbmRwWkhSb0tuUm9hWE11YUdWcFoyaDBLU3hwUFRBN2FUeDBMbXhsYm1kMGFEc3JLMmtwZEZ0cFhUMHdPMlp2Y2loMllYSWdiejB4TDJVdWNHVnlhVzlrTEhJOU1TeHVQVEFzY3owd08zTThaUzVzWlhabGJITTdLeXR6S1h0bWIzSW9kbUZ5SUd3OWJtVjNJR0VvVFdGMGFDNWpaV2xzS0hSb2FYTXVkMmxrZEdncWJ5a3NUV0YwYUM1alpXbHNLSFJvYVhNdWFHVnBaMmgwS204cExHVXVjbUZ1WkhObFpXUXJjeWtzWXowd08yTThkR2hwY3k1b1pXbG5hSFE3S3l0aktXWnZjaWhwUFRBN2FUeDBhR2x6TG5kcFpIUm9PeXNyYVNsN2RtRnlJR2c5YkM1blpYUldZV3gxWlNocEttOHNZeXB2S1R0MFcya3JZeXAwYUdsekxuZHBaSFJvWFNzOWFDcE5ZWFJvTG5CdmR5aHlMR1V1WVhSMFpXNHBmVzRyUFUxaGRHZ3VjRzkzS0hJc1pTNWhkSFJsYmlrc2NpbzlMalVzYnlvOU1peGxMbUYwZEdWdWZYWmhjaUIyUFRFdmJqdG1iM0lvWXowd08yTThkR2hwY3k1b1pXbG5hSFE3S3l0aktXWnZjaWhwUFRBN2FUeDBhR2x6TG5kcFpIUm9PeXNyYVNsMFcya3JZeXAwYUdsekxuZHBaSFJvWFNvOWRqdG1iM0lvWXowd08yTThkR2hwY3k1b1pXbG5hSFE3S3l0aktXWnZjaWhwUFRBN2FUeDBhR2x6TG5kcFpIUm9PeXNyYVNsN2RtRnlJRUVzZFN4bUxHUTdRVDExUFdZOWRGdHBLMk1xZEdocGN5NTNhV1IwYUYwc1pEMHhMR1V1WVdKemIyeDFkR1UvS0VFOU1qVTFLazFoZEdndVlXSnpLRUVwTEhVOU1qVTFLazFoZEdndVlXSnpLSFVwTEdZOU1qVTFLazFoZEdndVlXSnpLR1lwTEdROU1qVTFLazFoZEdndVlXSnpLR1FwS1Rvb1FUMG9RU3N4S1M4eUtqSTFOU3gxUFNoMUt6RXBMeklxTWpVMUxHWTlLR1lyTVNrdk1pb3lOVFVzWkQwb1pDc3hLUzh5S2pJMU5TazdZMjl1YzNRZ1lUMG9aU3gwTEdFcFBUNWxLaWd4TFdFcEszUXFZVHRsTG1OdmJHOXlKaVlvUVQxaEtHVXVZMjlzYjNJdWVDeGxMbVZ1WkVOdmJHOXlMbmdzUVM4eU5UVXBMSFU5WVNobExtTnZiRzl5TG5rc1pTNWxibVJEYjJ4dmNpNTVMSFV2TWpVMUtTeG1QV0VvWlM1amIyeHZjaTU2TEdVdVpXNWtRMjlzYjNJdWVpeG1MekkxTlNrcExIUm9hWE11YzJWMFVtZGlZU2hwTEdNc1FTeDFMR1lzWkNsOWZXTnlaV0YwWlVOb1pXTnJaWElvWlNsN1ptOXlLSFpoY2lCMFBUQTdkRHgwYUdsekxtaGxhV2RvZERzckszUXBabTl5S0haaGNpQmhQVEE3WVR4MGFHbHpMbmRwWkhSb095c3JZU2tvVFdGMGFDNW1iRzl2Y2loMEwyVXBLMDFoZEdndVpteHZiM0lvWVM5bEtTa2xNajA5TUQ5MGFHbHpMbk5sZEZKblltRW9ZU3gwTERBc01Dd3dMREkxTlNrNmRHaHBjeTV6WlhSU1oySmhLR0VzZEN3eU5UVXNNalUxTERJMU5Td3lOVFVwZlhSdlNXMWhaMlZEYjI1MFpYaDBLR1VwZTJadmNpaDJZWElnZEQxbExtTnlaV0YwWlVsdFlXZGxSR0YwWVNoMGFHbHpMbmRwWkhSb0xIUm9hWE11YUdWcFoyaDBLU3hoUFRBc2FUMTBhR2x6TG5kcFpIUm9LblJvYVhNdWFHVnBaMmgwS2pRN1lUeHBPMkVyS3lsMExtUmhkR0ZiWVYwOWRHaHBjeTVrWVhSaFcyRmRPM0psZEhWeWJpQjBmWE4wWVhScFl5QmpjbVZoZEdWT2IybHpaVlJsZUhSMWNtVlhhWFJvVTNCbFl5aGxMSFFwZTJOdmJuTjBJR0U5ZEN4dlBYUXNjajFrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDSmpZVzUyWVhNaUtUdHlMbmRwWkhSb1BXRXNjaTVvWldsbmFIUTlienRqYjI1emRDQnVQWEl1WjJWMFEyOXVkR1Y0ZENnaU1tUWlLU3h6UFc1bGR5QnBLR0VzYnlrN2N5NWpjbVZoZEdWVWRYSmlkV3hsYm1ObEtHVXBPMk52Ym5OMElHdzljeTUwYjBsdFlXZGxRMjl1ZEdWNGRDaHVLVHR5WlhSMWNtNGdiaTV3ZFhSSmJXRm5aVVJoZEdFb2JDd3dMREFwTEhJdWRHOUVZWFJoVlZKTUtDSnBiV0ZuWlM5d2JtY2lLWDF6ZEdGMGFXTWdZM0psWVhSbFRtOXBjMlZVWlhoMGRYSmxLR1VzZEN4aExHa3BlM1poY2lCdlBYdDlPM0psZEhWeWJpQnZMbkpoYm1SelpXVmtQV1VzYnk1d1pYSnBiMlE5WVN4dkxteGxkbVZzY3oweExHOHVZWFIwWlc0OUxqUXNieTVoWW5OdmJIVjBaVDFwTEc4dVkyOXNiM0k5SVRFc2J5NWhiSEJvWVQwaE1TeDBhR2x6TG1OeVpXRjBaVTV2YVhObFZHVjRkSFZ5WlZkcGRHaFRjR1ZqS0c4c2RDbDlmV05zWVhOeklHOTdZMjl1YzNSeWRXTjBiM0lvWlN4MEtYdDBhR2x6TG1kc1BXVXVaMlYwUTI5dWRHVjRkQ2dpWlhod1pYSnBiV1Z1ZEdGc0xYZGxZbWRzSWl4N2NISmxjMlZ5ZG1WRWNtRjNhVzVuUW5WbVptVnlPaUV3ZlNrc2RHaHBjeTVuYkM1MmFXVjNjRzl5ZENnd0xEQXNkQ3gwS1N4bExuZHBaSFJvUFhRc1pTNW9aV2xuYUhROWREdDJZWElnWVQxMGFHbHpMbWRzTG1OeVpXRjBaVUoxWm1abGNpZ3BPM1JvYVhNdVoyd3VZbWx1WkVKMVptWmxjaWgwYUdsekxtZHNMa0ZTVWtGWlgwSlZSa1pGVWl4aEtTeDBhR2x6TG1kc0xtSjFabVpsY2tSaGRHRW9kR2hwY3k1bmJDNUJVbEpCV1Y5Q1ZVWkdSVklzYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hiTFRFc01Td3dMREVzTVN3d0xDMHhMQzB4TERBc01Td3RNU3d3WFNrc2RHaHBjeTVuYkM1VFZFRlVTVU5mUkZKQlZ5bDlZM0psWVhSbFUyaGhaR1Z5S0dVc2RDeGhLWHQyWVhJZ2FUMTBhR2x6TG1kc0xtTnlaV0YwWlZOb1lXUmxjaWgwS1R0cFppaDBhR2x6TG1kc0xuTm9ZV1JsY2xOdmRYSmpaU2hwTEdFcExIUm9hWE11WjJ3dVkyOXRjR2xzWlZOb1lXUmxjaWhwS1N3aGRHaHBjeTVuYkM1blpYUlRhR0ZrWlhKUVlYSmhiV1YwWlhJb2FTeDBhR2x6TG1kc0xrTlBUVkJKVEVWZlUxUkJWRlZUS1NsMGFISnZkeUIwYUdsekxtZHNMbWRsZEZOb1lXUmxja2x1Wm05TWIyY29hU2s3ZEdocGN5NW5iQzVoZEhSaFkyaFRhR0ZrWlhJb1pTeHBLWDFqY21WaGRHVlVaWGgwZFhKbEtHVXNkQ2w3WTI5dWMzUWdZVDBvWlN4MEtUMCtlMk52Ym5OMElHRTlkR2hwY3k1bmJEdDJZWElnYVQxaExtTnlaV0YwWlZSbGVIUjFjbVVvS1R0amIyNXpkQ0J2UFZ0aExsUkZXRlJWVWtVd0xHRXVWRVZZVkZWU1JURXNZUzVVUlZoVVZWSkZNaXhoTGxSRldGUlZVa1V6WFR0eVpYUjFjbTRnWVM1aFkzUnBkbVZVWlhoMGRYSmxLRzliZEYwcExHRXVZbWx1WkZSbGVIUjFjbVVvWVM1VVJWaFVWVkpGWHpKRUxHa3BMR0V1ZEdWNFVHRnlZVzFsZEdWeWFTaGhMbFJGV0ZSVlVrVmZNa1FzWVM1VVJWaFVWVkpGWDAxSlRsOUdTVXhVUlZJc1lTNU1TVTVGUVZJcExHRXVkR1Y0VUdGeVlXMWxkR1Z5YVNoaExsUkZXRlJWVWtWZk1rUXNZUzVVUlZoVVZWSkZYMDFCUjE5R1NVeFVSVklzWVM1TVNVNUZRVklwTEdFdWRHVjRVR0Z5WVcxbGRHVnlhU2hoTGxSRldGUlZVa1ZmTWtRc1lTNVVSVmhVVlZKRlgxZFNRVkJmVXl4aExsSkZVRVZCVkNrc1lTNTBaWGhRWVhKaGJXVjBaWEpwS0dFdVZFVllWRlZTUlY4eVJDeGhMbFJGV0ZSVlVrVmZWMUpCVUY5VUxHRXVVa1ZRUlVGVUtTeGhMblJsZUVsdFlXZGxNa1FvWVM1VVJWaFVWVkpGWHpKRUxEQXNZUzVTUjBKQkxHRXVVa2RDUVN4aExsVk9VMGxIVGtWRVgwSlpWRVVzWlNrc2FYMDdiR1YwSUdrOVpHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2dpYVcxbklpazdkbUZ5SUc4N2FTNXZibXh2WVdROUtHODlkQ3hsUFQ1N1lTaGxMblJoY21kbGRDeHZLWDBwTEdrdWMzSmpQV1Y5WTNKbFlYUmxUV0YwWlhKcFlXd29aU3gwS1h0MllYSWdZVDEwYUdsekxtZHNMbU55WldGMFpWQnliMmR5WVcwb0tUdDBhR2x6TG1OeVpXRjBaVk5vWVdSbGNpaGhMSFJvYVhNdVoyd3VWa1ZTVkVWWVgxTklRVVJGVWl4bEtTeDBhR2x6TG1OeVpXRjBaVk5vWVdSbGNpaGhMSFJvYVhNdVoyd3VSbEpCUjAxRlRsUmZVMGhCUkVWU0xIUXBMSFJvYVhNdVoyd3ViR2x1YTFCeWIyZHlZVzBvWVNrc2RHaHBjeTVuYkM1MWMyVlFjbTluY21GdEtHRXBMSFJvYVhNdVoyd3VjRzl6YVhScGIyNDlkR2hwY3k1bmJDNW5aWFJCZEhSeWFXSk1iMk5oZEdsdmJpaGhMQ0p3YjNOcGRHbHZiaUlwTEhSb2FYTXVaMnd1Wlc1aFlteGxWbVZ5ZEdWNFFYUjBjbWxpUVhKeVlYa29kR2hwY3k1bmJDNXdiM05wZEdsdmJpa3NkR2hwY3k1bmJDNTJaWEowWlhoQmRIUnlhV0pRYjJsdWRHVnlLSFJvYVhNdVoyd3VjRzl6YVhScGIyNHNNeXgwYUdsekxtZHNMa1pNVDBGVUxDRXhMREFzTUNrc2RHaHBjeTVuYkM1cFRXOTFjMlU5ZEdocGN5NW5iQzVuWlhSVmJtbG1iM0p0VEc5allYUnBiMjRvWVN3aWFVMXZkWE5sSWlrc2RHaHBjeTVuYkM1cFFtZERiMnh2Y2oxMGFHbHpMbWRzTG1kbGRGVnVhV1p2Y20xTWIyTmhkR2x2YmloaExDSnBRbWREYjJ4dmNpSXBMSFJvYVhNdVoyd3VhVU5vWVc1dVpXd3dQWFJvYVhNdVoyd3VaMlYwVlc1cFptOXliVXh2WTJGMGFXOXVLR0VzSW1sRGFHRnVibVZzTUNJcExIUm9hWE11WjJ3dWFVTm9ZVzV1Wld3eFBYUm9hWE11WjJ3dVoyVjBWVzVwWm05eWJVeHZZMkYwYVc5dUtHRXNJbWxEYUdGdWJtVnNNU0lwTEhSb2FYTXVaMnd1YVVOb1lXNXVaV3d5UFhSb2FYTXVaMnd1WjJWMFZXNXBabTl5YlV4dlkyRjBhVzl1S0dFc0ltbERhR0Z1Ym1Wc01pSXBMSFJvYVhNdVoyd3VhVU5vWVc1dVpXd3pQWFJvYVhNdVoyd3VaMlYwVlc1cFptOXliVXh2WTJGMGFXOXVLR0VzSW1sRGFHRnVibVZzTXlJcGZYVndaR0YwWlNobExIUXBlM1JvYVhNdVoyd3VkVzVwWm05eWJUSm1LSFJvYVhNdVoyd3VhVTF2ZFhObExHVXVlQ3hsTG5rcExIUm9hWE11WjJ3dWRXNXBabTl5YlRObUtIUm9hWE11WjJ3dWFVSm5RMjlzYjNJc2RDNTRMSFF1ZVN4MExub3BMSFJvYVhNdVoyd3VaSEpoZDBGeWNtRjVjeWgwYUdsekxtZHNMbFJTU1VGT1IweEZYMU5VVWtsUUxEQXNOQ2tzZEdocGN5NW5iQzUxYm1sbWIzSnRNV2tvZEdocGN5NW5iQzVwUTJoaGJtNWxiREFzTUNrc2RHaHBjeTVuYkM1MWJtbG1iM0p0TVdrb2RHaHBjeTVuYkM1cFEyaGhibTVsYkRFc01Ta3NkR2hwY3k1bmJDNTFibWxtYjNKdE1Xa29kR2hwY3k1bmJDNXBRMmhoYm01bGJESXNNaWtzZEdocGN5NW5iQzUxYm1sbWIzSnRNV2tvZEdocGN5NW5iQzVwUTJoaGJtNWxiRE1zTXlsOWZXTnNZWE56SUhKN1kyOXVjM1J5ZFdOMGIzSW9aU3gwS1h0MGFHbHpMbmc5WlN4MGFHbHpMbms5ZEgxelpYUW9aU3gwS1h0MGFHbHpMbmc5WlN4MGFHbHpMbms5ZEgxOVkyeGhjM01nYm50amIyNXpkSEoxWTNSdmNpaGxMSFFzWVNsN2RHaHBjeTU0UFdVc2RHaHBjeTU1UFhRc2RHaHBjeTU2UFdGOWMyVjBLR1VzZEN4aEtYdDBhR2x6TG5nOVpTeDBhR2x6TG5rOWRDeDBhR2x6TG5vOVlYMWpiRzl1WlNncGUzSmxkSFZ5YmlCdVpYY2diaWgwYUdsekxuZ3NkR2hwY3k1NUxIUm9hWE11ZWlsOWJYVnNkR2x3YkhsVFkyRnNZWElvWlNsN2NtVjBkWEp1SUhSb2FYTXVlQ285WlN4MGFHbHpMbmtxUFdVc2RHaHBjeTU2S2oxbExIUm9hWE45ZldaMWJtTjBhVzl1SUhNb1pTbDdkbUZ5SUhROWUzSmhibVJ6WldWa09qQXNjR1Z5YVc5a09qRXlPQ3hzWlhabGJITTZNU3hoZEhSbGJqb3hmVHR6ZDJsMFkyZ29aU2w3WTJGelpTSkRiR0Y1SWpwMExuQmxjbWx2WkQweE1qZ3NkQzVqYjJ4dmNqMXVaWGNnYmlneE16QXNNVEF4TERneUtTeDBMbVZ1WkVOdmJHOXlQVzVsZHlCdUtERXlNUzQwTERrMExqWXNOell1TnlrN1luSmxZV3M3WTJGelpTSlRkRzl1WlNJNmRDNXdaWEpwYjJROU5qUXNkQzVzWlhabGJITTlNeXgwTG1OdmJHOXlQVzVsZHlCdUtEYzNMRGd6TERnM0tTeDBMbVZ1WkVOdmJHOXlQVzVsZHlCdUtESXhPQ3d5TVRrc01qSXpLVHRpY21WaGF6dGpZWE5sSWsxbGRHRnNJanAwTG5CbGNtbHZaRDB5TlRZc2RDNXNaWFpsYkhNOU1peDBMbU52Ykc5eVBXNWxkeUJ1S0RFeU1Td3hNallzTVRNNUtTeDBMbVZ1WkVOdmJHOXlQVzVsZHlCdUtERXdNQ3d4TURJc01UQTJLVHRpY21WaGF6dGpZWE5sSWs5aWMybGthV0Z1SWpwMExtTnZiRzl5UFhRdVpXNWtRMjlzYjNJOWJtVjNJRzRvTUN3d0xEQXBPMkp5WldGck8yTmhjMlVpUjNKaGMzTWlPblF1Y0dWeWFXOWtQVFlzZEM1amIyeHZjajF1WlhjZ2JpZ3hMREV3TERJcExIUXVaVzVrUTI5c2IzSTlibVYzSUc0b056QXVPU3d4T1RVdU5TdzRNaTQ0S1R0aWNtVmhhenRqWVhObElrSnliMjU2WlNJNmRDNXdaWEpwYjJROU1qVTJMSFF1YkdWMlpXeHpQVElzZEM1amIyeHZjajF1WlhjZ2JpZzVNeXd6Tml3eU5Da3NkQzVsYm1SRGIyeHZjajF1WlhjZ2JpZ3hPREVzTVRJNUxEWTRLVHRpY21WaGF6dGpZWE5sSWtwaFpHVWlPblF1Y0dWeWFXOWtQVFlzZEM1amIyeHZjajF1WlhjZ2JpZzVOU3d4T0RRc01USTRLU3gwTG1WdVpFTnZiRzl5UFc1bGR5QnVLREUzTUN3eU1UZ3NNVGN3S1R0aWNtVmhhenRqWVhObElrZHZiR1FpT25RdWNHVnlhVzlrUFRJMU5peDBMbXhsZG1Wc2N6MHlMSFF1WTI5c2IzSTlibVYzSUc0b01UazFMREUxTlN3Mk5Ta3NkQzVsYm1SRGIyeHZjajF1WlhjZ2JpZ3hPVFFzTVRVeUxEWTBLVHRpY21WaGF6dGpZWE5sSWxKMVlua2lPblF1WTI5c2IzSTlkQzVsYm1SRGIyeHZjajF1WlhjZ2JpZ3lOVFVzTUN3ek1DazdZbkpsWVdzN1kyRnpaU0pUWVhCd2FHbHlaU0k2ZEM1amIyeHZjajEwTG1WdVpFTnZiRzl5UFc1bGR5QnVLRE01TERFd01Dd3lOVFVwTzJKeVpXRnJPMk5oYzJVaVFXMWxkR2g1YzNRaU9uUXVZMjlzYjNJOWRDNWxibVJEYjJ4dmNqMXVaWGNnYmlneE5EZ3NORElzTWpNMUtUdGljbVZoYXp0allYTmxJa1JwWVcxdmJtUWlPblF1WTI5c2IzSTlkQzVsYm1SRGIyeHZjajF1WlhjZ2JpZ3lOVFVzTWpVMUxESTFOU2s3WW5KbFlXczdZMkZ6WlNKU1pXWnNaV04wSWpwMExuQmxjbWx2WkQweE1qaDljbVYwZFhKdUlHa3VZM0psWVhSbFRtOXBjMlZVWlhoMGRYSmxWMmwwYUZOd1pXTW9kQ3d4TURJMEtYMTBLREFwTzJOdmJuTjBJR3c5V3lKRGJHRjVJaXdpVTNSdmJtVWlMQ0pOWlhSaGJDSXNJazlpYzJsa2FXRnVJbDBzWXoxYklrZHlZWE56SWl3aVFuSnZibnBsSWl3aVNtRmtaU0lzSWtkdmJHUWlMQ0pTZFdKNUlpd2lVMkZ3Y0docGNtVWlMQ0pCYldWMGFIbHpkQ0lzSWtScFlXMXZibVFpWFN4b1BYdENjbTl1ZW1VNklUQXNSMjlzWkRvaE1DeE5aWFJoYkRvaE1DeEtZV1JsT2lFd0xGSjFZbms2SVRBc1UyRndjR2hwY21VNklUQXNRVzFsZEdoNWMzUTZJVEFzUkdsaGJXOXVaRG9oTUgwc2RqMTdSM0poYzNNNklUQXNTbUZrWlRvaE1IMHNRVDFiYm1WM0lHNG9MakUxTnl3dU16WXhMQzR6TWpJcExHNWxkeUJ1S0M0MU1qSXNMak00TEM0ek5UTXBMRzVsZHlCdUtDNHpNRFFzTGpVc0xqYzBNeWtzYm1WM0lHNG9MakU0TkN3dU5UUXhMQzQxTURZcExHNWxkeUJ1S0M0ME1Td3VNelk1TEM0ek5EVXBMRzVsZHlCdUtDNDBNek1zTGpRek15d3VORE16S1Ywc2RUMWJJa1p2Y21WemRDSXNJazF2ZFc1MFlXbHVJaXdpVW1sMlpYSWlMQ0pHYVdWc1pDSXNJa05oZG1VaUxDSkRiRzkxWkhNaVhUdDBLREFwTzJOc1lYTnpJR1o3WTI5dWMzUnlkV04wYjNJb1pTbDdkR2hwY3k1d2NtOXdjejFiWFN4MGFHbHpMblJ2VTNSeWFXNW5QU2dwUFQ1MGFHbHpMbkJ5YjNCekxtMWhjQ2dvWlQwK1cyQWlKSHRsTG01aGJXVjlJbUFzWUNJa2UyVXVkbUZzZFdWT1lXMWxQejlsTG5aaGJIVmxmU0pnWFM1cWIybHVLQ0k2SWlrcEtTNXFiMmx1S0Nrc2RHaHBjeTV3Y205d1FubE9ZVzFsUFdVOVBuUm9hWE11Y0hKdmNITXVabWx1WkNnb2REMCtkQzV1WVcxbFBUMDlaU2twTEhSb2FYTXVjSEp2Y0hNOVpYMTlablZ1WTNScGIyNGdaQ2hsTEhRcGUzTjNhWFJqYUNobEtYdGpZWE5sSWtoaGMwMXZkWFJvSWpwallYTmxJa2hoYzBWNVpYTWlPbkpsZEhWeWJudGpiMjV6ZEdGdWREb2hNQ3h1WVcxbE9tVXNkbUZzZFdVNklsbGxjeUk5UFQxMGZUdGpZWE5sSWxObFpXUWlPbkpsZEhWeWJudHVZVzFsT21Vc2RtRnNkV1U2Y0dGeWMyVkpiblFvZENsOU8yTmhjMlVpUW1GelpTSTZZMjl1YzNRZ1lUMG9aVDArS0h0cGJtUmxlRHBzTG1sdVpHVjRUMllvWlNrc2JtRnRaVHBsTEhOb2FXNWxlVG9oSVdoYlpWMHNaVzFpYjNOelpXUTZJU0YyVzJWZGZTa3BLSFFwTzNKbGRIVnlibnRqYjI1emRHRnVkRG9oTVN4MFpYaDBkWEpsT2lFd0xHNWhiV1U2WlN4MllXeDFaVHBoTG01aGJXVXNiM0pwWnpwaGZUdGpZWE5sSWs5eVpTSTZZMjl1YzNRZ2FUMGlUbTl1WlNJOVBUMTBQM3RqYjJ4dmNqcHVkV3hzTEc1aGJXVTZiblZzYkgwNktHVTlQaWg3YVc1a1pYZzZZeTVwYm1SbGVFOW1LR1VwTEc1aGJXVTZaU3h6YUdsdVpYazZJU0ZvVzJWZExHVnRZbTl6YzJWa09pRWhkbHRsWFgwcEtTaDBLVHR5WlhSMWNtNTdZMjl1YzNSaGJuUTZJVEVzZEdWNGRIVnlaVG9oTUN4dVlXMWxPbVVzZG1Gc2RXVTZhUzV1WVcxbExHOXlhV2M2YVgwN1kyRnpaU0pDWjBOdmJHOXlJanBqYjI1emRDQnZQU2hsUFQ1N1kyOXVjM1FnZEQxMUxtbHVaR1Y0VDJZb1pTazdjbVYwZFhKdWUyTnZiRzl5T2tGYmRGMHVZMnh2Ym1Vb0tTNXRkV3gwYVhCc2VWTmpZV3hoY2lndU16VXBMR2x1WkdWNE9uUXNibUZ0WlRwMVczUmRmWDBwS0hRcE8zSmxkSFZ5YmlCamIyNXpiMnhsTG14dlp5aHZLU3g3WTI5dWMzUmhiblE2SVRFc2JtRnRaVHBsTEhaaGJIVmxPbTh1WTI5c2IzSXNkbUZzZFdWT1lXMWxPbTh1Ym1GdFpTeHZjbWxuT205OU8yTmhjMlVpVEdGeVoyVlBjbVVpT25KbGRIVnlibnR1WVcxbE9tVXNkbUZzZFdVNklsbGxjeUk5UFQxMGZUdGtaV1poZFd4ME9uSmxkSFZ5Ym50MllXeDFaVHB1ZFd4c2ZYMTlZMjl1YzNRZ2JUMWtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNnaWNtVnVaR1Z5UTJGdWRtRnpJaWtzWnoxdVpYY2dZMnhoYzNON1kyOXVjM1J5ZFdOMGIzSW9aU2w3ZEdocGN5NXRiM1Z6WlZCdmN6MXVaWGNnY2lnd0xEQXBMSFJvYVhNdWIyNU5iM1Z6WlUxdmRtVTlaVDArZTJ4bGRDQjBQV1V1WTJ4cFpXNTBXQ3hoUFdVdVkyeHBaVzUwV1R0MGFHbHpMbU5oYm5aaGN6dDBhR2x6TG0xdmRYTmxVRzl6TG5ObGRDaE5ZWFJvTG0xcGJpaDBMMlJ2WTNWdFpXNTBMbUp2WkhrdVkyeHBaVzUwVjJsa2RHZ3FNaTB4TERFcExFMWhkR2d1YldsdUtHRXZaRzlqZFcxbGJuUXVZbTlrZVM1amJHbGxiblJJWldsbmFIUXFNaTB4TERFcEtYMHNkR2hwY3k1eVpXNWtaWEk5S0NrOVBudHlaWEYxWlhOMFFXNXBiV0YwYVc5dVJuSmhiV1VvZEdocGN5NXlaVzVrWlhJcExIUm9hWE11WjJ3dWRYQmtZWFJsS0hSb2FYTXViVzkxYzJWUWIzTXNkR2hwY3k1MWJtbG1iM0p0Y3k1cFFtZERiMnh2Y2k1MllXeDFaU2w5TEhSb2FYTXVZMkZ1ZG1GelBXVXNaRzlqZFcxbGJuUXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2liVzkxYzJWdGIzWmxJaXgwYUdsekxtOXVUVzkxYzJWTmIzWmxLU3gwYUdsekxuVnVhV1p2Y20xelBYdHBRbWREYjJ4dmNqcDdkbUZzZFdVNmJtVjNJRzRvTUN3eExEQXBmU3hwVFc5MWMyVTZlM1poYkhWbE9tNWxkeUJ5S0RBc01DbDlmWDFoYzNsdVl5QnNiMkZrVUhKdmNITW9kQ2w3ZEM1d2NtOXdjeTVtYVd4MFpYSW9LR1U5UGlGbExtTnZibk4wWVc1MEtTa3VabWxzZEdWeUtDaGxQVDRoWlM1MFpYaDBkWEpsS1NrdVptbHNkR1Z5S0NobFBUNGlVMlZsWkNJaFBUMWxMbTVoYldVcEtTNW1hV3gwWlhJb0tHVTlQaUpNWVhKblpVOXlaU0loUFQxbExtNWhiV1VwS1M1bWIzSkZZV05vS0NobFBUNTdkR2hwY3k1MWJtbG1iM0p0YzF0Z2FTUjdaUzV1WVcxbGZXQmRMblpoYkhWbFBXVXVkbUZzZFdWOUtTa3NZWGRoYVhRZ2RHaHBjeTVzYjJGa1RXRjBaWEpwWVd3b1pTZ2ljSEpsWTJsemFXOXVJR2hwWjJod0lHWnNiMkYwTzF4dUkyUmxabWx1WlNCSFRGTk1TVVpaSURGY2JpTmtaV1pwYm1VZ1IweFRURWxHV1NBZ01WeHVkbUZ5ZVdsdVp5QjJaV015SUhaV1pYSjBaWGhRYjNOcGRHbHZianQxYm1sbWIzSnRJSFpsWXpJZ2FVMXZkWE5sTzNWdWFXWnZjbTBnZG1Wak15QnBRbWREYjJ4dmNqdDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnBRMmhoYm01bGJEQTdkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdhVU5vWVc1dVpXd3hPM1Z1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR2xEYUdGdWJtVnNNanQxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JwUTJoaGJtNWxiRE03WTI5dWMzUWdhVzUwSUVFOU1qdG1iRzloZENCQ0tHWnNiMkYwSUVNc1pteHZZWFFnUkNsN2NtVjBkWEp1SUcxaGVDZ3RReXhFS1R0OVpteHZZWFFnUlNobWJHOWhkQ0JETEdac2IyRjBJRVFzWm14dllYUWdSaWw3Wm14dllYUWdSejF0WVhnb1JpMWhZbk1vUXkxRUtTd3dMaWs3Y21WMGRYSnVJRzFwYmloRExFUXBMVWNxUnlvd0xqSTFMMFk3Zldac2IyRjBJRWdvWm14dllYUWdReXhtYkc5aGRDQkVMR1pzYjJGMElFWXBlMlpzYjJGMElFYzliV0Y0S0VZdFlXSnpLQzFETFVRcExEQXVLVHR5WlhSMWNtNGdiV0Y0S0MxRExFUXBLMGNxUnlvd0xqSTFMMFk3Zldac2IyRjBJRWtvZG1Wak15QktMSFpsWXpNZ1N5bDdabXh2WVhRZ1REMXNaVzVuZEdnb1NpOUxLVHRtYkc5aGRDQk5QV3hsYm1kMGFDaEtMeWhMS2tzcEtUdHlaWFIxY200b1REd3hMaWsvS0V3dE1TNHBLbTFwYmlodGFXNG9TeTU0TEVzdWVTa3NTeTU2S1RwTUtpaE1MVEV1S1M5Tk8zMW1iRzloZENCT0tIWmxZek1nU2l4bWJHOWhkQ0JQS1h0eVpYUjFjbTRnYkdWdVozUm9LRW9wTFU4N2ZXWnNiMkYwSUZBb2RtVmpNeUJLTEhabFl6TWdVU3htYkc5aGRDQkhLWHR5WlhSMWNtNGdaRzkwS0Vvc1VTa3JSenQ5WEc0alpHVm1hVzVsSUZCSklDQXpMakUwTVRVNU1qWTFNemhjYmlOa1pXWnBibVVnUlZWTVJWSWdJREl1TnpFNE1qZ3hPREk0TkRVNU1EUTFYRzUyWldNeUlGSW9kbVZqTXlCS0tYdG1iRzloZENCVFBXRjBZVzRvU2k1NExFb3VlaWs3Wm14dllYUWdWRDFoYzJsdUtFb3VlUzlzWlc1bmRHZ29TaWtwTzFROWJHOW5LSFJoYmlnd0xqSTFLbEJKS3pBdU5TcFVLU2s3ZG1Wak1pQlZQWFpsWXpJb1V5eFVLVHRWTHoxUVNUdHlaWFIxY200Z1ZUdDlkbVZqTWlCV0tIWmxZeklnVnl4bWJHOWhkQ0JZS1h0MlpXTXlJRms5S0ZjdWVIa3JkbVZqTWlneExpd3hMaWtwTHpJdU8yWnNiMkYwSUZvOWRHVjRkSFZ5WlRKRUtHbERhR0Z1Ym1Wc015eFpLUzU0TzJsbUtGbzhhVTFoZEVOb1lXNW5aVU4xZENsN1dEMHhManRwWmlocFJXMWliM056S1h0bWJHOWhkQ0JoUFhSbGVIUjFjbVV5UkNocFEyaGhibTVsYkRJc1dTa3VlRHRhTFQxaEtqQXVNek1xYVVsdWJtVnlUM1YwWlhJN2ZYMXlaWFIxY200Z2RtVmpNaWhhS21sT2IybHpaVk4wY21WdVozUm9MRmdwTzMxamIyNXpkQ0IyWldNeklHSTlkbVZqTXlnd0xpd3RNQzR4TERBdUtUdGpiMjV6ZENCMlpXTXpJR005ZG1Wak15Z3dMaXd0TUM0MExEQXVLVHQyWldNeUlHUW9kbVZqTXlCS0tYdEtMbmt0UFRBdU1ESTdkbVZqTXlCbFBVbzdTaTU0UFdGaWN5aEtMbmdwTzJac2IyRjBJRmc5TUM0N1pteHZZWFFnWmoweE1EQXdNQzQ3Wm14dllYUWdaejB3TGp0bWJHOWhkQ0JvUFRFd01EQXdManRtYkc5aGRDQnBQVEF1TzJac2IyRjBJR285TFRBdU1qdHBaaWhLTG5rK0xUQXVNalVtSmtvdWVUd3dMakUxS1h0MlpXTXpJR3M5ZG1Wak15Z3dMaXd3TGl3d0xpazdabXh2WVhRZ2JEMUpLRW9yYXl4MlpXTXpLREF1TVRJcmFVaGxZV1JYTERBdU1UVXNNQzR4TlNrcE8yWnNiMkYwSUcwOVNTaEtMWFpsWXpNb01DNHNMVEF1TVN3d0xqQXdOU2tyYXl4MlpXTXpLREF1TVN3d0xqRXpMREF1TVRNcEtUdG1iRzloZENCdVBVVW9iQ3h0TERBdU1ETXBPMlpzYjJGMElHODlTU2hLTFhabFl6TW9NQzRzTFRBdU1pd3dMakEzTlNrcmF5eDJaV016S0RBdU1UVXNNQzR6TERBdU1UVXBLVHRtYkc5aGRDQndQVzQ3Wm14dllYUWdjVDF3TzJac2IyRjBJSEk5VGloS0xYWmxZek1vTUM0d055d3dMaXd0TUM0eE1pa3JheXd3TGpBeEsybEZlV1ZUYVhwbEtUdG1QWEU3YVdZb2FVaGhjMFY1WlhNcGUyWTlTQ2h5TEhFc01DNHdNeWs3ZldZOVFpaFFLR1VzYm05eWJXRnNhWHBsS0habFl6TW9hVWhsWVdSVWFXeDBMQzB4TGl3d0xqRXBLU3d3TGpBMU5Ta3NaaWs3YVdZb2FVaGhjMDF2ZFhSb0tYdG1iRzloZENCelBVa29TaTEyWldNektEQXVMQzB3TGpFeUxDMHdMakV4S1N4MlpXTXpLREF1TURFc01DNHdNeXd3TGpBeEtTazdaajFJS0hNc1ppd3dMakF6S1R0OWRtVmpNaUJYUFZJb1lpMWxLVHQyWldNeUlGRTlWaWhYTEdjcE8yWXJQVkV1ZUR0blBWRXVlVHQ5YVdZb1NpNTVQaTB3TGpRbUprb3VlVHd0TUM0eEtYdG9QVWtvWlMxMlpXTXpLREF1TEMwd0xqTXpMREF1TURVcExIWmxZek1vTUM0ek5Td3dMakUwTERBdU1pa3BPMmc5UWlobExua3JNQzR6TlN4b0tUdG9QVUlvVUNobExHNXZjbTFoYkdsNlpTaDJaV016S0dsQ2IzUjBiMjFVYVd4MExERXVMREF1TVNrcExEQXVNekExS1N4b0tUdDJaV015SUZjOVVpaGpMV1VwTzNabFl6SWdVVDFXS0Zjc2FTazdhQ3M5VVM1NE8yazlVUzU1TzMxbWJHOWhkQ0IwUFVVb1ppeG9MREF1TURVcE8xZzliV2w0S0djc2FTeHpiVzl2ZEdoemRHVndLQzB3TGpFNUxDMHdMakl4TEVvdWVTa3BPM0psZEhWeWJpQjJaV015S0hRc1dDazdmV1pzYjJGMElIVW9kbVZqTXlCMkxIWmxZek1nZHl4bWJHOWhkQ0I0TEdOdmJuTjBJR1pzYjJGMElFWXBlMlpzYjJGMElIazlNUzQ3Wm14dllYUWdlajE0TzJadmNpaHBiblFnUVVFOU1EdEJRVHd6TWp0QlFTc3JLWHRtYkc5aGRDQkhQV1FvZGl0M0tub3BMbmc3ZVQxdGFXNG9lU3hHS2tjdmVpazdlaXM5WTJ4aGJYQW9SeXd3TGpBd015d3dMakV3S1R0cFppaDVQREF1TURBeWZIeDZQakV1S1dKeVpXRnJPMzF5WlhSMWNtNGdZMnhoYlhBb2VTd3dMaXd4TGlrN2ZYWmxZek1nUVVJb2RtVmpNeUJCUXlsN2RtVmpNaUJCUkQxMlpXTXlLREV1TEMweExpa3FNQzQxTnpjek8yTnZibk4wSUdac2IyRjBJRUZGUFRBdU1EQXdOVHR5WlhSMWNtNGdibTl5YldGc2FYcGxLRUZFTG5oNWVTcGtLRUZESzBGRUxuaDVlU3BCUlNrdWVDdEJSQzU1ZVhncVpDaEJReXRCUkM1NWVYZ3FRVVVwTG5nclFVUXVlWGg1S21Rb1FVTXJRVVF1ZVhoNUtrRkZLUzU0SzBGRUxuaDRlQ3BrS0VGREswRkVMbmg0ZUNwQlJTa3VlQ2s3Zldac2IyRjBJRUZHS0habFl6TWdRVU1wZTNKbGRIVnliaUJ0YVc0b1FVTXVlU3N4TGl4a0tFRkRLUzU0S1R0OWRtVmpNeUJCUnloMlpXTXpJSFlzZG1Wak15QjNLWHQyWldNeklIazlkbVZqTXlndE1TNHBPMlpzYjJGMElFRklQVFl1TzJac2IyRjBJRUZKUFNndE1DNDFMWFl1ZVNrdmR5NTVPMmxtS0VGSlBqQXVLWHQyWldNeklFRkRQWFlyZHlwQlNUdDVQWFpsWXpNb1FVa3NNQzRzTUM0cE8wRklQVUZKTzMxamIyNXpkQ0JtYkc5aGRDQkJTajB3TGpBd01ESTdabXh2WVhRZ2VqMHlManRtYkc5aGRDQkJTejB3TGp0bWIzSW9hVzUwSUVGQlBUQTdRVUU4TVRrMk8wRkJLeXNwZTNabFl6SWdRVXc5WkNoMkszY3FlaWs3Wm14dllYUWdSejFCVEM1NE8za3VlVDFCVEM1NU8ybG1LRWM4UVVwOGZIbytRVWdwWW5KbFlXczdlaXM5Unp0QlN6MHdManQ5YVdZb2VqeEJTQ2w1UFhabFl6TW9laXg1TG5rc01TNHBPM0psZEhWeWJpQjVPMzEyWldNeklFRk5LSFpsWXpNZ1FVNHNkbVZqTXlCQlF5eDJaV016SUVGUExIWmxZek1nUVZBc2RtVmpNeUIzTEhabFl6TWdRVkVzZG1Wak15QkJVaWw3ZG1Wak15QkJVejEyWldNektEQXVLVHQyWldNeklFRlVQWFpsWXpNb01DNHBPMlpzYjJGMElFRlZQV05zWVcxd0tFRlBMbmtzTUM0c01TNHBPMlpzYjJGMElFRldQV05zWVcxd0tDMUJUeTU1TERBdUxERXVLVHRtYkc5aGRDQkJWejF0WVhnb1pHOTBLRUZQTEVGT0tTd3dMaWs3Wm14dllYUWdRVmc5YldGNEtEQXVNeXN3TGpjcVpHOTBLRUZQTEMxQlRpa3NNQzRwTzJac2IyRjBJRUZaUFRBdU8ybG1LRUZYUGpBdU1EQXhLVUZaUFhVb1FVTXJNQzR3TVNwQlR5eEJUaXd3TGpBd01EVXNNekl1S1R0bWJHOWhkQ0JCV2oxd2IzY29ZMnhoYlhBb01TNHJaRzkwS0VGUExIY3BMREF1TERFdUtTdzFMaWs3Wm14dllYUWdRV0U5YldGNEtEQXVMSEJ2ZHloamJHRnRjQ2hrYjNRb1FVNHNRVkFwTERBdUxERXVLU3c0TGlrcE8wRlVLejB4TGpFcVFWY3FkbVZqTXlneExpd3hMaXd4TGlrcVFWazdRVlFyUFRBdU5TcEJWU3AyWldNektEQXVNVEFzTUM0eE5Td3dMak0xS1R0QlZDczlNQzQxS2tGV0tuWmxZek1vTUM0ek1Dd3dMak13TERBdU16QXBPMEZVS3oweExpcEJXQ3AyWldNektEQXVNekFzTUM0eU5Td3dMakl3S1R0QlZDczlNUzRxUVZvcWRtVmpNeWd4TGpBd0xERXVNREFzTVM0d01Da3FRVmM3UVZRcVBVRlNPMEZUS3oxQlVTcEJWQ293TGpjeE8wRlRLejFCWVNwMlpXTXpLREV1TERBdU9UVXNNQzQxS1NwQldTb3lMaW9vTUM0eUt6QXVPQ3BCV2lrcVFWSTdjbVYwZFhKdUlFRlRPMzEyWldNeklFRmlLSFpsWXpNZ1FWQXBlM1psWXpNZ1N6MUJVRHRtYkc5aGRDQkJZejB5TGlwemNYSjBLSEJ2ZHloTExuZ3NNaTRwSzNCdmR5aExMbmtzTWk0cEszQnZkeWhMTG5vdE1TNHNNaTRwS1R0MlpXTXlJRUZrUFVzdWVIa3ZRV01yTGpVN2NtVjBkWEp1SUhSbGVIUjFjbVV5UkNocFEyaGhibTVsYkRBc1FXUXBMbmg1ZWlvd0xqVTdmWFp2YVdRZ2JXRnBiaWgyYjJsa0tYdDJaV015SUVGbFBYWldaWEowWlhoUWIzTnBkR2x2Ymk1NGVUdDJaV016SUVGbVBYWmxZek1vTUM0cE8yWnNiMkYwSUVGblBUZ3VOVHRtYkc5aGRDQkJhRDAwTGp0bWIzSW9hVzUwSUVGalBUQTdRV004UVR0Qll5c3JLV1p2Y2locGJuUWdVVDB3TzFFOFFUdFJLeXNwZTNabFl6SWdRV2s5ZG1Wak1paG1iRzloZENoQll5a3NabXh2WVhRb1VTa3BMMlpzYjJGMEtFRXBMVEF1TlR0MlpXTXlJRUZxUFVGcEszWmxZeklvYlc5a0tFRmxMbmdzTlRBd0xpa3NRV1V1ZVNrN2RtVmpNaUJLUFNndGRtVmpNaWcxTURBdUxEVXdNQzRwS3pJdUtrRnFLUzgxTURBdU8yWnNiMkYwSUVGclBTMXBUVzkxYzJVdWVDdFFTVHQyWldNeklIWTlkbVZqTXloQmFDcHphVzRvUVdzcExDMHdMakVzUVdncVkyOXpLRUZyS1NrN2RtVmpNeUJCYkQxMlpXTXpLREF1TEMwd0xqRXNNQzRwTzNabFl6TWdRVzA5Ym05eWJXRnNhWHBsS0VGc0xYWXBPM1psWXpNZ1FXNDlibTl5YldGc2FYcGxLR055YjNOektFRnRMSFpsWXpNb01DNHNNUzRzTUM0cEtTazdkbVZqTXlCQmJ6MXViM0p0WVd4cGVtVW9ZM0p2YzNNb1FXNHNRVzBwS1R0MlpXTXpJSGM5Ym05eWJXRnNhWHBsS0VvdWVDcEJiaXRLTG5rcVFXOHJRV2NxUVcwcE8zWmxZek1nUVhBOWFVSm5RMjlzYjNJN2RtVmpNeUJCVXoxQmNDb3dMalU3ZG1Wak15QkJjVDFCUnloMkxIY3BPMmxtS0VGeExubytMVEF1TlNsN2RtVmpNeUJCUXoxMkswRnhMbmdxZHp0MlpXTXpJRUZQUFVGQ0tFRkRLVHRwWmloQmNTNTZQREF1TlNsQlR6MTJaV016S0RBdUxERXVMREF1S1R0MlpXTXpJRUZRUFhKbFpteGxZM1FvZHl4QlR5azdkbVZqTXlCQmNqMUJReTEyWldNektEQXVMREF1TURJc01DNHBPM1psWXpJZ1FYTTlVaWhpTFVGeUtUdDJaV015SUVGMFBWSW9ZeTFCY2lrN2RtVmpNaUJWUFcxcGVDaEJjeXhCZEN4emJXOXZkR2h6ZEdWd0tDMHdMakU1TEMwd0xqSXhMRUZ5TG5rcEtUdDJaV016SUVGMVBYUmxlSFIxY21VeVJDaHBRMmhoYm01bGJERXNWU2t1ZUhsNk8ybG1LR2xUYUdsdVpYa3hLWHRCZFNzOVFXSW9RVkFwTzMxMlpXTXpJRUYyUFhSbGVIUjFjbVV5UkNocFEyaGhibTVsYkRJc1ZTa3VlSGw2TzJsbUtHbFRhR2x1WlhreUtYdEJkaXM5UVdJb1FWQXBPMzEyWldNeklFRjNQVzFwZUNoQmRTeEJkaXhCY1M1NUtUdDJaV016SUVGUlBVRnhMbm8rTUM0MVAwRjNPa0Z3TzJOdmJuTjBJSFpsWXpNZ1FVNDlibTl5YldGc2FYcGxLSFpsWXpNb0xURXVMREF1Tml3dE1DNDVLU2s3WTI5dWMzUWdkbVZqTXlCQmVEMXViM0p0WVd4cGVtVW9kbVZqTXlneExpd3dMallzTFRBdU9Ta3BPMEZUUFhabFl6TW9NQzRwTzBGVEt6MUJUU2hCVGl4QlF5eEJUeXhCVUN4M0xFRlJMSFpsWXpNb01TNHNNQzQ1TUN3d0xqYzFLU2s3UVZNclBVRk5LRUY0TEVGRExFRlBMRUZRTEhjc1FWRXNkbVZqTXlnd0xqa3NNQzQzTUN3d0xqWTFLU2s3UVZNOWJXbDRLRUZUTEVGd0tqQXVOU3h6Ylc5dmRHaHpkR1Z3S0RFd0xpd3lNQzRzUVhFdWVDa3BPMzFCWmlzOVFWTTdmVUZtTHoxbWJHOWhkQ2hCS2tFcE8yZHNYMFp5WVdkRGIyeHZjajEyWldNMEtFRm1MREV1S1R0OUlpa3NkQzV3Y205d2N5bDlZWE41Ym1NZ2MyVjBkWEFvWlNsN2RHaHBjeTVuYkQxdVpYY2dieWgwYUdsekxtTmhiblpoY3l3MU1EQXBMR0YzWVdsMElIUm9hWE11Ykc5aFpGQnliM0J6S0dVcGZXRnplVzVqSUd4dllXUk5ZWFJsY21saGJDaGxMR0VwZTJOdmJuTjBJRzg5WVM1bWFXNWtLQ2hsUFQ0aVUyVmxaQ0k5UFQxbExtNWhiV1VwS1N4eVBYUW9ieTUyWVd4MVpTa3NiajFoTG1acGJtUW9LR1U5UGlKTVlYSm5aVTl5WlNJOVBUMWxMbTVoYldVcEtTeHNQWHR6WldWa09tOHVkbUZzZFdVc2FXNTBaWEoyWVd3Nk5qUXJNeklxY2lncExHZHliMjkyZVRvaEtHNC9MblpoYkhWbFB6OXlLQ2srTGpVcGZTeGpQVnQ3Ym1GdFpUb2lTR1ZoWkZjaUxIWmhiSFZsT2k0d05TcHlLQ2w5TEh0dVlXMWxPaUpJWldGa1ZHbHNkQ0lzZG1Gc2RXVTZMallxY2lncExTNHpmU3g3Ym1GdFpUb2lRbTkwZEc5dFZHbHNkQ0lzZG1Gc2RXVTZMallxY2lncExTNHpmU3g3Ym1GdFpUb2lSWGxsVTJsNlpTSXNkbUZzZFdVNkxqQXlLbklvS1gwc2UyNWhiV1U2SWsxaGRFTm9ZVzVuWlVOMWRDSXNkbUZzZFdVNmJDNW5jbTl2ZG5rL0xqQTFPaTQxZlN4N2JtRnRaVG9pVG05cGMyVlRkSEpsYm1kMGFDSXNkbUZzZFdVNmJDNW5jbTl2ZG5rL0xqQXhOVG91TURJMWZTeDdibUZ0WlRvaVNXNXVaWEpQZFhSbGNpSXNkbUZzZFdVNmNpZ3BQaTQxUHpFNkxURjlYU3hvUFdFdVptbHVaQ2dvWlQwK0lrSmhjMlVpUFQwOVpTNXVZVzFsS1Nrc2RqMWhMbVpwYm1Rb0tHVTlQaUpQY21VaVBUMDlaUzV1WVcxbEtTa3NRVDFiZTI1aGJXVTZJbE5vYVc1bGVURWlMSFpoYkhWbE9tZ3ViM0pwWnk1emFHbHVaWGw5TEh0dVlXMWxPaUpUYUdsdVpYa3lJaXgyWVd4MVpUcDJQM1l1YjNKcFp5NXphR2x1WlhrNmFDNXZjbWxuTG5Ob2FXNWxlWDBzZTI1aGJXVTZJa1Z0WW05emN5SXNkbUZzZFdVNmRqOTJMbTl5YVdjdVpXMWliM056WldRNmFDNXZjbWxuTG1WdFltOXpjMlZrZlYwc2RUMWhMbVpwYkhSbGNpZ29aVDArWlM1amIyNXpkR0Z1ZENrcExtMWhjQ2dvWlQwK1lDTmtaV1pwYm1VZ2FTUjdaUzV1WVcxbGZTQWtlMlV1ZG1Gc2RXVjlZQ2twTG1wdmFXNG9JbHh1SWlrcklseHVJaXRqTG0xaGNDZ29aVDArWUNOa1pXWnBibVVnYVNSN1pTNXVZVzFsZlNBa2UyVXVkbUZzZFdVdWRHOUdhWGhsWkNneE1DbDlZQ2twTG1wdmFXNG9JbHh1SWlrcklseHVJaXRCTG0xaGNDZ29aVDArWUNOa1pXWnBibVVnYVNSN1pTNXVZVzFsZlNBa2UyVXVkbUZzZFdWOVlDa3BMbXB2YVc0b0lseHVJaWtySWx4dUlpdGxMR1k5YUM1MllXeDFaU3hrUFNoMlB6OW9LUzUyWVd4MVpUdDBhR2x6TG1kc0xtTnlaV0YwWlUxaGRHVnlhV0ZzS0NKY2JtRjBkSEpwWW5WMFpTQjJaV016SUhCdmMybDBhVzl1TzF4dVlYUjBjbWxpZFhSbElIWmxZeklnZFhZN1hHNTJZWEo1YVc1bklIWmxZeklnZGxabGNuUmxlRkJ2YzJsMGFXOXVPMXh1ZG05cFpDQnRZV2x1S0NsN2RsWmxjblJsZUZCdmMybDBhVzl1UFNod2IzTnBkR2x2Ymk1NGVTQXFJREF1TlNBcklIWmxZeklvTUM0MUxDQXdMalVwS1NBcUlEVXdNQzR3TzJkc1gxQnZjMmwwYVc5dVBYWmxZelFvY0c5emFYUnBiMjRzTVM0cE8zMGlMSFVwTEhSb2FYTXVaMnd1WTNKbFlYUmxWR1Y0ZEhWeVpTaHpLQ0pTWldac1pXTjBJaWtzTUNrc2RHaHBjeTVuYkM1amNtVmhkR1ZVWlhoMGRYSmxLSE1vWmlrc01Ta3NkR2hwY3k1bmJDNWpjbVZoZEdWVVpYaDBkWEpsS0hNb1pDa3NNaWs3WTI5dWMzUWdiVDFwTG1OeVpXRjBaVTV2YVhObFZHVjRkSFZ5WlNoc0xuTmxaV1FzTVRBeU5DeHNMbWx1ZEdWeWRtRnNMR3d1WjNKdmIzWjVLVHQwYUdsekxtZHNMbU55WldGMFpWUmxlSFIxY21Vb2JTd3pLWDE5S0cwcE8zWmhjaUI1TzNrOWUyRjBkSEpwWW5WMFpYTTZXM3NpZEhKaGFYUmZkSGx3WlNJNklrSmhjMlVpTENKMllXeDFaU0k2SWtOc1lYa2lmU3g3SW5SeVlXbDBYM1I1Y0dVaU9pSlBjbVVpTENKMllXeDFaU0k2SWxKMVlua2lmU3g3SW5SeVlXbDBYM1I1Y0dVaU9pSklZWE5GZVdWeklpd2lkbUZzZFdVaU9pSk9ieUo5TEhzaWRISmhhWFJmZEhsd1pTSTZJa2hoYzAxdmRYUm9JaXdpZG1Gc2RXVWlPaUpaWlhNaWZTeDdJblJ5WVdsMFgzUjVjR1VpT2lKQ1owTnZiRzl5SWl3aWRtRnNkV1VpT2lKTmIzVnVkR0ZwYmlKOUxIc2lkSEpoYVhSZmRIbHdaU0k2SWt4aGNtZGxUM0psSWl3aWRtRnNkV1VpT2lKT2J5SjlMSHNpZEhKaGFYUmZkSGx3WlNJNklsTmxaV1FpTENKMllXeDFaU0k2SWpZeU5Ea3dJbjBzZXlKMGNtRnBkRjkwZVhCbElqb2lUWFZrSWl3aWRtRnNkV1VpT2pZek5EQjlYU3dpYVcxaFoyVWlPaUpvZEhSd2N6b3ZMM0J5YjNoNUxuZGxZWEpsWTJ4aGVTNTNiM0pyWlhKekxtUmxkaTgvYVdROU1TSjlMR2N1YzJWMGRYQW9LR1U5UG50amIyNXpkQ0IwUFh0OUxHRTlXMTA3Wm05eUtHTnZibk4wSUdrZ2IyWWdaU2w3WTI5dWMzUWdaVDFwTG5SeVlXbDBYM1I1Y0dVc2J6MWtLR1VzYVM1MllXeDFaU2s3ZEZ0bFhUMXZMR0V1Y0hWemFDaHZLWDF5WlhSMWNtNGdibVYzSUdZb1lTNW1hV3gwWlhJb0tHVTlQbTUxYkd3aFBUMWxMblpoYkhWbEtTa3ViV0Z3S0NobFBUNG9leTR1TG1Vc2RtRnNkV1ZPWVcxbE9pSmliMjlzWldGdUlqMDlkSGx3Wlc5bUlHVXVkbUZzZFdVL1pTNTJZV3gxWlQ4aVdXVnpJam9pVG04aU9tVXVkbUZzZFdWT1lXMWxmU2twS1NsOUtTaDVMbUYwZEhKcFluVjBaWE1wS1M1MGFHVnVLQ2dvS1QwK2UyY3VjbVZ1WkdWeUtDbDlLU2s3UEM5elkzSnBjSFErIn0=",
  "metadata": {
    "name": "CLAY #1",
    "description": "CLAY is a fully on-chain 3D generative art project. The code is the art, the art is the code.",
    "image": "https://proxy.weareclay.workers.dev/?id=1",
    "attributes": [
      {
        "trait_type": "Base",
        "value": "Clay"
      },
      {
        "trait_type": "Ore",
        "value": "Ruby"
      },
      {
        "trait_type": "HasEyes",
        "value": "No"
      },
      {
        "trait_type": "HasMouth",
        "value": "Yes"
      },
      {
        "trait_type": "BgColor",
        "value": "Mountain"
      },
      {
        "trait_type": "LargeOre",
        "value": "No"
      },
      {
        "trait_type": "Seed",
        "value": "62490"
      },
      {
        "trait_type": "Mud",
        "value": 6340
      }
    ],
    "animation_url": "data:text/html;base64,"
  }
}