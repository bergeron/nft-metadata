{
  "address": "0xd37db96941d08ab9218a38d752a1cceff42cac54",
  "type": "ERC721",
  "name": "Memory Disc",
  "tokenCount": "88",
  "uri": "https://api.disc.asystem.dev/metadata/1.json",
  "metadata": {
    "name": "Memory Disc #1",
    "description": "Artist: NIINOMI\n\nNFT is one of the new mediums of art, and adopting NFT as a medium for your work is a choice of what to store on the blockchain and what to leave behind for the world 100 years from now.\n\"Memory Disc\" is the first work of media artist NIINOMI's \"A SYSTEM\" project, in which computer systems are used as art.\nIts motif is a CD as a storage medium, with information stored on a chain that can be used to attribute the work, such as color palette, size, and speed.\nThis is NIINOMI's first NFT project as an individual, and it is also the attributes that will be used for future works presented at A SYSTEM.\nHe is starting this project with the hope that it will become a recording medium that will serve as the core of works that will continue to be created for decades to come.\n\nWebsite: [https://asystem.dev/memory_disc](https://asystem.dev/memory_disc)\n\nArtist Link: [https://niinomi.art](https://niinomi.art)\n\nLicense: [Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)](https://creativecommons.org/licenses/by-nc-sa/4.0/)",
    "image": "https://di1uco4pez1g9.cloudfront.net/niinomi/memory_disc/1.png",
    "animation_url": "data:text/html,%3C!DOCTYPE%20html%3E%0A%3Chtml%20lang%3D%22en%22%3E%0A%3Chead%3E%0A%20%20%3Cmeta%20charset%3D%22UTF-8%22%3E%0A%20%20%3Cmeta%20name%3D%22viewport%22%20content%3D%22width%3Ddevice-width%2C%20initial-scale%3D1%22%2F%3E%0A%20%20%3Ctitle%3EMemory%20Disc%3C%2Ftitle%3E%0A%20%20%3Cstyle%3E%0A%20%20%20%20%20%20body%20%7B%0A%20%20%20%20%20%20%20%20%20%20margin%3A%200%3B%0A%20%20%20%20%20%20%20%20%20%20overflow%3A%20hidden%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20.artCanvas%20%7B%0A%20%20%20%20%20%20%20%20%20%20width%3A%20100%25%3B%0A%20%20%20%20%20%20%20%20%20%20height%3A%20100%25%3B%0A%20%20%20%20%20%20%20%20%20%20position%3A%20fixed%3B%0A%20%20%20%20%20%20%20%20%20%20overflow%3A%20hidden%3B%0A%20%20%20%20%20%20%20%20%20%20display%3A%20flex%3B%0A%20%20%20%20%20%20%20%20%20%20justify-content%3A%20center%3B%0A%20%20%20%20%20%20%20%20%20%20align-items%3A%20center%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20.barCanvas%20canvas%20%7B%0A%20%20%20%20%20%20%20%20%20%20transform%3A%20translateX(50%25)%3B%0A%20%20%20%20%20%20%7D%0A%20%20%3C%2Fstyle%3E%0A%20%20%3Cscript%20type%3D%22text%2Fjavascript%22%3Eattributes%20%3D%20%7B%22hash%22%3A%220x1124cc45a5ad8f593117ef4bcbb57a6d360bea92259236ee4c8f1de8d1e21839%22%2C%22palette%22%3A%2288c0d0-4c566a-2e3440-81a1c1-d8dee9-b48ead%22%2C%22image%22%3A%22%22%2C%22message%22%3A%22%22%2C%22shape%22%3A%22circle%22%2C%22speed%22%3A77%2C%22size%22%3A43%2C%22weight%22%3A62%2C%22offset%22%3A93%2C%22dynamic%22%3Atrue%7D%3B%3C%2Fscript%3E%0A%3C%2Fhead%3E%0A%3Cbody%3E%0A%0A%3Cdiv%3E%0A%20%20%3Cdiv%20id%3D%22backgroundContainer%22%20class%3D%22artCanvas%22%3E%3C%2Fdiv%3E%0A%20%20%3Cdiv%20id%3D%22artContainer%22%20class%3D%22artCanvas%22%3E%3C%2Fdiv%3E%0A%20%20%3Cdiv%20id%3D%22barContainer%22%20class%3D%22artCanvas%20barCanvas%22%3E%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%3Cscript%20src%3D%22https%3A%2F%2Fniinomi.mypinata.cloud%2Fipfs%2FQmZSfU4GudpKLyPRBGucBeiwLynaVnM3PBLHZDnFhhLePg%22%3E%3C%2Fscript%3E%0A%3Cscript%20type%3D%22text%2Fjavascript%22%3E%0A%20%20(()%3D%3E%7B%22use%20strict%22%3Bconst%20t%3D(t%2Cs%2Ce%2Ci%2Ca)%3D%3Ei%2B(t-s)%2F(e-s)*(a-i)%3Bclass%20s%7Bconstructor(t)%7Bthis.hash%3Dt%2Cthis.useA%3D!1%3Bconst%20s%3Dfunction(t)%7Blet%20s%3DparseInt(t.substr(0%2C8)%2C16)%2Ce%3DparseInt(t.substr(8%2C8)%2C16)%2Ci%3DparseInt(t.substr(16%2C8)%2C16)%2Ca%3DparseInt(t.substr(24%2C8)%2C16)%3Breturn%20function()%7Bs%7C%3D0%2Ce%7C%3D0%2Ci%7C%3D0%2Ca%7C%3D0%3Bconst%20t%3D(s%2Be%7C0)%2Ba%7C0%3Breturn%20a%3Da%2B1%7C0%2Cs%3De%5Ee%3E%3E%3E9%2Ce%3Di%2B(i%3C%3C3)%7C0%2Ci%3Di%3C%3C21%7Ci%3E%3E%3E11%2Ci%3Di%2Bt%7C0%2C(t%3E%3E%3E0)%2F4294967296%7D%7D%3Bthis.prngA%3Dnew%20s(this.hash.substr(2%2C32))%2Cthis.prngB%3Dnew%20s(this.hash.substr(34%2C32))%3Bfor(let%20t%3D0%3Bt%3C1e6%3Bt%2B%3D2)this.prngA()%2Cthis.prngB()%7DrandomDec()%7Breturn%20this.useA%3D!this.useA%2Cthis.useA%3Fthis.prngA()%3Athis.prngB()%7DrandomNum(t%2Cs)%7Breturn%20t%2B(s-t)*this.randomDec()%7DrandomInt(t%2Cs)%7Breturn%20Math.floor(this.randomNum(t%2Cs%2B1))%7DrandomBool(t)%7Breturn%20this.randomDec()%3Ct%7DrandomChoice(t)%7Breturn%20t%5Bthis.randomInt(0%2Ct.length-1)%5D%7DshuffleWithSeed(t)%7Blet%20s%3Dt.length%3Bfor(%3Bs%3B)%7Bconst%20e%3DMath.floor(this.randomDec()*s--)%2Ci%3Dt%5Bs%5D%3Bt%5Bs%5D%3Dt%5Be%5D%2Ct%5Be%5D%3Di%7Dreturn%20t%7D%7Dclass%20e%7Bconstructor(i%2Ca)%7Bthis.devVariables%3D%7Bpalettes%3A%5B%220100a8-58a8a9-bfc7c8-a9aeb1-0a0919%22%2C%22e6e6e6-6ccbf9-dbd5d9-4f8cdc-ffffff-e8e8e8%22%2C%22455354-f8f8f2-1b1d1e-f92672-a6e22e-ae81ff%22%2C%22313633-ccdc90-7f9f7f-3f3f3f-e3ceab-dcdccc%22%2C%22818596-17171b-89b8c2-84a0c6-c6c8d1-a093c7%22%2C%22504945-ebdbb2-282828-fb4934-83a598-b8bb26%22%2C%2288c0d0-4c566a-2e3440-81a1c1-d8dee9-b48ead%22%2C%22000000-424450-bd93f9-ff79c6-f8f8f2-50fa7b%22%2C%22f8f8f2-66747f-2b3e50-ff6541-66d9ef-5c98cd%22%2C%22ebefc0-232738-0e101a-795ccc-5a5f7b-aeb18d%22%2C%2280cbc4-546e7a-263238-ffffff-c792ea-82b1ff%22%2C%22f7f9f9-121424-54c9ff-e9729f-a2a0df-7e7e7e%22%2C%2287afff-1c1c1c-ffffff-00afff-c6c6c6-ffaf5f%22%2C%22eeeeee-005f5f-002b36-8787af-ffdf87-87afaf%22%2C%22ee5d43-5f6167-23262e-ffffff-c74ded-00e8c6%22%2C%22b7c5d3-171d23-5ec4ff-b7c5d3-718ca1-70e1e8%22%2C%221a1d45-d7b7bb-ff4ea5-6cac99-eaad64-7eb564%22%5D%2Cshapes%3A%5Be.SHAPE.ELLIPSE%2Ce.SHAPE.RECT%5D%7D%2Ci%7C%7Cconsole.log(%22******************%5CnNo%20attributes.%5CnGenerate%20attributes!%5Cn******************%22)%3Bconst%20r%3Di%3Fi.hash%3Aa%7C%7C(()%3D%3E%7Blet%20t%3D%220x%22%3Bfor(let%20s%3D0%3Bs%3C64%3Bs%2B%2B)t%2B%3DMath.floor(16*Math.random()).toString(16)%3Breturn%20t%7D)()%3Bthis.random%3Dnew%20s(r)%3Bconst%20h%3Di%7C%7C%7Bhash%3Ar%2Cpalette%3Athis.random.randomChoice(this.devVariables.palettes)%2Cimage%3A%22%22%2Cshape%3Athis.random.randomChoice(this.devVariables.shapes)%2Cspeed%3Athis.random.randomInt(1%2C100)%2Csize%3Athis.random.randomInt(1%2C100)%2Cweight%3Athis.random.randomInt(1%2C100)%2Coffset%3Athis.random.randomInt(1%2C100)%2Cdynamic%3Athis.random.randomBool(.9)%7D%3Bthis.attributes%3DObject.assign(%7B%7D%2Ch)%2Cthis.attributes.speed%3Dt(this.attributes.speed%2C0%2C100%2C.2%2C1)%2Cthis.attributes.size%3Dt(this.attributes.size%2C0%2C100%2C.2%2C1)%2Cthis.attributes.weight%3DMath.floor(t(this.attributes.weight%2C0%2C100%2C0%2C3))%2Cthis.attributes.offset%3Dt(this.attributes.offset%2C0%2C100%2C10%2C30)%2Cthis.attributes.stroke%3Dthis.random.randomBool(.3)%2Cthis.paletteColors%3Dthis.random.shuffleWithSeed(this.getPalette())%7DgetPalette()%7Breturn%20this.attributes.palette.split(%22-%22).map((t%3D%3E%22%23%22%2Bt))%7DgetColors()%7Bconst%20t%3Dthis.paletteColors%3Breturn%7Bbackground%3At%5B0%5D%2Cjacket%3At%5B1%5D%2Cframe%3At%5B2%5D%2Cstroke%3A%22%23333%22%7D%7DgetColor(t)%7Bconst%20s%3Dthis.paletteColors%3Breturn%20s%5Bt%25s.length%5D%7D%7De.SHAPE%3D%7BRECT%3A%22square%22%2CELLIPSE%3A%22circle%22%2CTRIANGLE%3A%22triangle%22%7D%2Ce.VARIABLES%3D%7BBAR_RADIUS%3A4%2CBG_RADIUS%3A6%7D%3Bclass%20i%7Bconstructor(t%2Cs)%7Bthis.p%3Dt%2Cthis.feature%3Ds%7Dpreload(t)%7Bt%26%26this.p.loadImage(t%2C(t%3D%3E%7Bthis.img%3Dt%7D)%2C(t%3D%3E%7Bconsole.log(%22image%20load%20failed%22)%2Cconsole.error(t)%7D))%7DcreateImageGraphic()%7Bif(!this.img)return%3Bconst%20t%3Dthis.p%3Bthis.imgGraphics%7C%7C(this.imgGraphics%3Dt.createGraphics(t.width%2Ct.height))%2Cthis.imgGraphics.background(%22%23fff%22)%3Bconst%20s%3Dthis.getDrawingArea(t)%2Ce%3Ds.x%2Ci%3Ds.y%2Ca%3Dthis.img.width%2Cr%3Dthis.img.height%2Ch%3Da%3Er%3Blet%20o%3D0%2Cn%3D0%3Bconst%20c%3D()%3D%3E%7Bn%3Di%2Co%3Dn*(a%2Fr)%7D%2Cd%3D()%3D%3E%7Bo%3De%2Cn%3Do*(r%2Fa)%7D%3Be%3Ei%3Fh%3F(d()%2Cn%3Ei%26%26c())%3Ac()%3Ah%3Fd()%3A(c()%2Co%3Ee%26%26d())%2Cthis.imgGraphics.image(this.img%2Ct.width%2F2-o%2F2%2Ct.height%2F2-n%2F2%2Co%2Cn)%7DresizeImgGraphics()%7Bthis.imgGraphics%26%26this.imgGraphics.resizeCanvas(this.p.width%2Cthis.p.height)%7DgetColor(t%2Cs)%7Breturn%20this.imgGraphics%3Fthis.imgGraphics.get(t%2Cs)%3Athis.p.color(%22%23000%22)%7DgetDrawingArea(t)%7Bconst%20s%3Dthis.p.min(t.width%2Ct.height)%2F1.1%3Breturn%20this.p.createVector(s%2Cs)%7DgetPadding(t)%7Bconst%20s%3Dthis.getDrawingArea(t)%3Breturn%20this.p.createVector((this.p.width-s.x)%2F2%2C(this.p.height-s.y)%2F2)%7DisImageLoaded()%7Breturn!!this.img%7D%7Dlet%20a%2Cr%2Ch%2Co%2Cn%2Cc%2Cd%3D0%3Bclass%20l%20extends%20i%7Bconstructor(t%2Cs%2Ce%2Ci%3D!1)%7Bsuper(t%2Cs)%2Cthis.balls%3D%5B%5D%2Cthis.angle%3D0%2Cthis.canvasContainerElm%3Dnull%2Cthis.isThumbnailMode%3D!1%2Cthis.area%3Dnull%2Cthis.discGraphicsRadius%3D0%2Cthis.canvasContainerElm%3De%2Cthis.isThumbnailMode%3Di%7Dsetup(t)%7Bconst%20s%3Dthis.p%3Ba%7C%7C(a%3Ds.createGraphics(s.width%2Cs.height))%2Cthis.createImageGraphic()%3Bconst%20e%3Dthis.feature.attributes.offset%3Bthis.area%3Dthis.getDrawingArea(a)%3Bconst%20i%3Dthis.area.x%2F2*.88%3Bthis.discGraphicsRadius%3D2.1*i%2Cr%7C%7C(r%3Ds.createGraphics(s.width%2Cs.height))%2Cr.ellipse(s.width%2F2%2Cs.height%2F2%2Cthis.discGraphicsRadius)%2Cthis.balls%3D%5B%5D%3Bfor(let%20a%3D0%3Ba%3Ce%3Ba%2B%2B)%7Bconst%20r%3Di*((a%2B1)%2Fe)%2Ch%3Dt.h%2F1.4*s.random(.2%2C1)%3Bd%3Ds.max(d%2Ch)%2Cthis.balls.push(new%20f(s.createVector(s.width%2F2%2Cs.height%2F2)%2C0%2C.1*this.feature.attributes.speed%2Cr%2Ci%2Ch%2Ct.h%2F2%2Cthis.feature.attributes.dynamic%2Cthis.feature.attributes.weight))%7Dfor(let%20t%3D0%3Bt%3C360%3Bt%2B%2B)this.balls.forEach((e%3D%3E%7Be.update(s%2C-t)%3Bconst%20i%3De.pos.x%2Ca%3De.pos.y%2Cr%3Dthis.getColor(i%2Ca)%3Be.setColor(t%2Cr)%7D))%3Bif(s.fill(this.feature.getColors().background)%2Cs.ellipse(s.width%2F2%2Cs.height%2F2%2Cthis.discGraphicsRadius)%2Cthis.isThumbnailMode)%7Bs.noLoop()%3Bfor(let%20t%3D0%3Bt%3C360%3Bt%2B%2B)s.frameCount%2B%2B%2Cthis.draw()%7D%7Ddraw()%7Bconst%20t%3Dthis.p%2Cs%3Dthis.isThumbnailMode%3F1%3Athis.feature.attributes.speed%3Bthis.angle%3Dt.frameCount*s%25360%3Bconst%20e%3Dthis.angle%2Ci%3Dthis.feature.attributes.stroke%3Bif(this.canvasContainerElm.style.rotate%3D%60%24%7Be%7Ddeg%60%2Cthis.balls.forEach(((s%2Cr)%3D%3E%7Bi%26%26t.frameCount%255%3D%3D0%3F(a.stroke(this.feature.getColors().stroke)%2Ca.strokeWeight(.8))%3Aa.noStroke()%3Bconst%20h%3Dthis.getBallColor(s%2Cr%2CMath.floor(this.angle)%2Cthis.isImageLoaded())%3Bfor(let%20i%3D0%3Bi%3C1%3Bi%2B%2B)%7Bs.update(t%2C-e)%3Bconst%20i%3Ds.pos.x%2Cr%3Ds.pos.y%3Ba.fill(h)%2Ca.rectMode(t.CENTER)%2Ca.push()%2Ca.translate(i%2Cr)%2Ca.rotate(a.radians(-e))%2Ca.translate(-i%2C-r)%2Cthis.drawChild(a%2Cs.pos.x%2Cs.pos.y%2Cs.radius)%2Ca.pop()%7D%7D))%2C0!%3D%3Da.width%7C%7C0!%3D%3Da.height)%7Bconst%20s%3Da.get()%3Bs.mask(r)%2Ct.image(s%2C0%2C0)%7Dt.noFill()%2Ct.stroke(this.feature.getColors().stroke)%2Ct.strokeWeight(4)%2Ct.ellipse(t.width%2F2%2Ct.height%2F2%2Cthis.discGraphicsRadius)%2Ct.strokeWeight(2)%2Ct.fill(this.feature.getColors().jacket)%2Ct.ellipse(t.width%2F2%2Ct.height%2F2%2Cthis.area.y%2F14)%7DwindowResized(t)%7Ba%26%26(a.resizeCanvas(this.p.width%2Cthis.p.height)%2Cr.resizeCanvas(this.p.width%2Cthis.p.height)%2Cthis.resizeImgGraphics()%2Cthis.setup(t))%7DdrawChild(t%2Cs%2Ci%2Ca)%7Bswitch(this.feature.attributes.shape)%7Bcase%20e.SHAPE.ELLIPSE%3At.ellipse(s%2Ci%2Ca)%3Bbreak%3Bcase%20e.SHAPE.TRIANGLE%3At.triangle(s%2B.6*a*Math.cos(t.radians(90))%2Ci%2B.6*a*Math.sin(t.radians(90))%2Cs%2B.6*a*Math.cos(t.radians(210))%2Ci%2B.6*a*Math.sin(t.radians(210))%2Cs%2B.6*a*Math.cos(t.radians(330))%2Ci%2B.6*a*Math.sin(t.radians(330)))%3Bbreak%3Bdefault%3At.square(s%2Ci%2Ca)%7D%7DgetBallColor(t%2Cs%2Ce%2Ci%3D!0)%7Breturn%20i%3Ft.getColor(Math.floor(e))%3Athis.feature.getColor(s)%7DfillBallsForBar(t)%7Bconst%20s%3Dthis.p%2Ci%3De.VARIABLES.BAR_RADIUS%3Bt.noStroke()%2Ct.fill(this.feature.getColors().frame)%2Ct.rect(0%2C0%2Ct.width%2Ct.height%2Ci%2C0%2C0%2Ci)%2Ct.push()%2Ct.translate(-s.width%2F2%2C-s.height%2F2%2Bt.height%2F2)%2Cthis.balls.forEach(((s%2Ce)%3D%3E%7Bconst%20i%3Ds.getOriginalPos(t)%2Ca%3Di.x%2Cr%3Di.y%2Ch%3Dthis.getBallColor(s%2Ce%2CMath.floor(this.angle)%2Cthis.isImageLoaded())%3Bt.fill(h)%2Ct.stroke(this.feature.getColors().stroke)%2Ct.strokeWeight(1)%2Ct.rectMode(t.CENTER)%2Cthis.drawChild(t%2Ca%2Cr%2Cs.radius)%7D))%2Ct.pop()%7D%7Dclass%20f%7Bconstructor(t%2Cs%2Ce%2Ci%2Ca%2Cr%2Ch%2Co%2Cn)%7Bthis.colors%3D%5B%5D%2Cthis.type%3D0%2Cthis.pos%3Dt.copy()%2Cthis.axisPos%3Dt.copy()%2Cthis.diameter%3Dthis.originalDiameter%3Di%2Cthis.maxDiameter%3Da%2Cthis.radius%3Dthis.originalRadius%3Dr%2Cthis.maxBallRadius%3Dh%2Cthis.speed%3De%2Cthis.startAngle%3Ds%2Cthis.isDynamic%3Do%2Cthis.type%3Dn%7DsetColor(t%2Cs)%7Bthis.colors%5Bt%5D%3Ds%7DgetColor(t)%7Breturn%20this.colors%5Bt%5D%7Dupdate(s%2Ce)%7Bif(this.pos.x%3Dthis.axisPos.x%2Bs.cos(s.radians(e))*this.diameter%2Cthis.pos.y%3Dthis.axisPos.y%2Bs.sin(s.radians(e))*this.diameter%2Cthis.isDynamic)switch(this.type)%7Bcase%200%3A%7Bconst%20e%3D(t%2Cs%2Ce)%3D%3E%7Bconst%20a%3Di((e-t)%2F(s-t)%2C0%2C1)%3Breturn%20a*a*(3-2*a)%7D%2Ci%3D(t%2Cs%2Ce)%3D%3E(t%3Cs%3Ft%3Ds%3At%3Ee%26%26(t%3De)%2Ct)%3Bthis.radius%3Dthis.originalRadius*t(e(-.8%2C.8%2Cs.cos(this.diameter%2Bs.frameCount*this.speed))%2C0%2C1%2C.2%2C1)%3Bbreak%7Dcase%201%3Athis.radius%3Dthis.originalRadius*t(s.noise(this.diameter%2Bs.frameCount*this.speed)%2C0%2C1%2C.2%2C1)%3Bbreak%3Bcase%202%3Athis.radius%3Dthis.originalRadius*t(s.sin(this.diameter%2Bs.frameCount*this.speed)%2C-1%2C1%2C.2%2C1)%3Bbreak%3Bdefault%3A%7Bconst%20e%3Dt%3D%3E1%2F(1%2BMath.exp(-16*(t-.5)))%3Bthis.radius%3Dthis.originalRadius*t(e(s.cos(this.diameter%2Bs.frameCount*this.speed))%2C0%2C1%2C.2%2C1)%3Bbreak%7D%7D%7DgetOriginalPos(t)%7Breturn%7Bx%3Athis.axisPos.x%2Bt.cos(t.radians(0))*this.diameter%2Cy%3Athis.axisPos.y%2Bt.sin(t.radians(0))*this.diameter%7D%7D%7Dclass%20u%20extends%20i%7Bconstructor(t%2Cs)%7Bsuper(t%2Cs)%7Dsetup()%7Bconst%20t%3Dthis.p%3Bthis.mainGraphics%7C%7C(this.mainGraphics%3Dt.createGraphics(t.width%2Ct.height))%2Cthis.area%3Dthis.getDrawingArea(this.mainGraphics)%3Bconst%20s%3Dthis.feature.getColors()%3Bt.background(s.background)%2Ct.rectMode(t.CENTER)%2Ct.noStroke()%3Bconst%20i%3De.VARIABLES.BG_RADIUS%3Bt.fill(s.frame)%3Blet%20a%3Dthis.area.x%2Cr%3D.96*a%2Ch%3Da-r%3Bt.square(t.width%2F2%2Ct.height%2F2%2Ca%2Ci)%2Ct.fill(s.jacket)%2Ct.square(t.width%2F2%2Ct.height%2F2%2Cr%2Ci)%2Ct.stroke(s.frame)%2Ct.strokeWeight(2)%2Ct.noFill()%3Bconst%20o%3D.99*a%3Bfor(let%20s%3D0%3Bs%3C4%3Bs%2B%2B)t.arc(t.width%2F2%2Ct.height%2F2%2Co%2Co%2Ct.radians(20%2B90*s)%2Ct.radians(70%2B90*s))%3Bconst%20n%3D.02*r%3Bt.fill(s.frame)%2Ct.noStroke()%3Bfor(let%20s%3D0%3Bs%3C4%3Bs%2B%2B)%7Bconst%20e%3D45%2B90*s%2Ci%3DMath.sqrt(Math.pow(r%2F2%2C2)%2BMath.pow(r%2F2%2C2))-h%2Ca%3DMath.cos(t.radians(e))*i%2Co%3DMath.sin(t.radians(e))*i%3Bt.ellipse(t.width%2F2%2Ba%2Ct.height%2F2%2Bo%2Cn)%7D%7Ddraw()%7B%7DwindowResized()%7Bthis.mainGraphics%26%26(this.mainGraphics.resizeCanvas(this.p.width%2Cthis.p.height)%2Cthis.setup())%7DgetArea()%7Breturn%20this.area%7D%7Dconst%20g%3D()%3D%3Elocation.search.replace(%22%3F%22%2C%22%22).split(%22%26%22).map((t%3D%3Et.split(%22%3D%22))).reduce(((t%2C%5Bs%2Ce%5D)%3D%3E(%7B...t%2C%5Bs%5D%3Ae%7D))%2C%7B%7D)%3Bnew%20class%7Bconstructor(t%2Cs%2Ce)%7Bthis.isWebGL%3D!1%2Cthis.backgroundCanvasParentID%3Dt%2Cthis.canvasParentID%3Ds%2Cthis.barCanvasParentID%3De%7Dasync%20create()%7Bif(this.p)this.initArt(this.p)%3Belse%7Bthis.initFeature()%3Bconst%20t%3Dp5%3Bnew%20t((t%3D%3E%7Bthis.initBackground(t)%7D))%2Cnew%20t((t%3D%3E%7Bthis.initBar(t)%7D))%2Cnew%20t((t%3D%3E%7Bthis.initArt(t)%7D))%7D%7DinitFeature()%7Bconst%20t%3Dg().hash%3Bh%3Dnew%20e(window.attributes%2Ct)%7DinitArt(t)%7Blet%20s%3D%22thumbnail%22%3D%3D%3Dg().mode%3B!0%3D%3D%3Dwindow.isThumbnailMode%26%26(s%3D!0)%2Cthis.p%3Dt%3Bconst%20e%3Ddocument.getElementById(this.canvasParentID)%3Bo%3Dnew%20l(t%2Ch%2Ce%2Cs)%2Ct.preload%3D()%3D%3E%7Bo.preload(h.attributes.image%7C%7C%22%22)%7D%2Ct.setup%3D()%3D%3E%7Bconst%20s%3Dt.min(t.windowWidth%2Ct.windowHeight)%3B0%3D%3D%3Ds%26%26console.log(%60size%3A%20%24%7Bs%7D%2C%20innerHeight%3A%20%24%7Bwindow.innerHeight%7D%60)%2Ct.createCanvas(s%2Cs%2Cthis.isWebGL%3Ft.WEBGL%3At.P2D).parent(this.canvasParentID)%3Bconst%20e%3Dthis.getBarSize()%3Bo.setup(e)%7D%2Ct.draw%3D()%3D%3E%7Bo.draw()%7D%2Ct.windowResized%3D()%3D%3E%7Bif(this.p%26%26(this.p.resizeCanvas(this.p.windowWidth%2Cthis.p.windowHeight)%2Co))%7Bconst%20t%3Dthis.getBarSize()%3Bo.windowResized(t)%7D%7D%7DinitBackground(t)%7Bn%3Dnew%20u(t%2Ch)%2Ct.setup%3D()%3D%3E%7Bt.createCanvas(t.windowWidth%2Ct.windowHeight%2Cthis.isWebGL%3Ft.WEBGL%3At.P2D).parent(this.backgroundCanvasParentID)%2Cn.setup(null)%2Cc%3Dn.getArea()%7D%2Ct.windowResized%3D()%3D%3E%7Bt.resizeCanvas(t.windowWidth%2Ct.windowHeight)%2Cn.windowResized(null)%2Cc%3Dn.getArea()%7D%7DinitBar(t)%7Bt.setup%3D()%3D%3E%7Bconst%20s%3Dthis.getBarSize()%3Bt.createCanvas(s.w%2Cs.h%2Cthis.isWebGL%3Ft.WEBGL%3At.P2D).parent(this.barCanvasParentID)%7D%2Ct.draw%3D()%3D%3E%7Bo%26%26o.fillBallsForBar(t)%7D%2Ct.windowResized%3D()%3D%3E%7Bconst%20s%3Dthis.getBarSize()%3Bt.resizeCanvas(s.w%2Cs.h)%7D%7DgetBarSize()%7Breturn%20c%3F%7Bw%3Ac.x%2F2%2Ch%3Ac.y%2F10%7D%3A%7Bw%3A0%2Ch%3A0%7D%7D%7D(%22backgroundContainer%22%2C%22artContainer%22%2C%22barContainer%22).create()%7D)()%3B%0A%3C%2Fscript%3E%0A%0A%3C%2Fbody%3E%0A%3C%2Fhtml%3E",
    "external_url": "https://asystem.dev/memory_disc",
    "background_color": "111111",
    "artist": "NIINOMI",
    "license": "Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)",
    "license_url": "https://creativecommons.org/licenses/by-nc-sa/4.0/",
    "attributes": [
      {
        "trait_type": "palette",
        "value": "88c0d0-4c566a-2e3440-81a1c1-d8dee9-b48ead"
      },
      {
        "trait_type": "image",
        "value": ""
      },
      {
        "trait_type": "message",
        "value": ""
      },
      {
        "trait_type": "shape",
        "value": "circle"
      },
      {
        "trait_type": "speed",
        "value": 77,
        "display_type": "number"
      },
      {
        "trait_type": "size",
        "value": 43,
        "display_type": "number"
      },
      {
        "trait_type": "weight",
        "value": 62,
        "display_type": "number"
      },
      {
        "trait_type": "offset",
        "value": 93,
        "display_type": "number"
      },
      {
        "trait_type": "dynamic",
        "value": true
      }
    ]
  }
}