{
  "address": "0xaa37c2af105f08cdf8e4e191416e0f623c7fa175",
  "type": "ERC721",
  "name": "Pings by BlockMachine",
  "tokenCount": "179",
  "uri": "data:application/json;base64,",
  "metadata": {
    "name": "Pings #1",
    "description": "Generative coded art as part of BlockGenerative collection.",
    "attributes": [
      {
        "trait_type": "Paint Color",
        "value": "Light Sea Green"
      },
      {
        "trait_type": "Columns",
        "value": 5
      },
      {
        "trait_type": "Rows",
        "value": 6
      },
      {
        "trait_type": "Palette",
        "value": "Emeralds"
      },
      {
        "trait_type": "Textured",
        "value": "Yes"
      },
      {
        "trait_type": "Contour",
        "value": "Sharp"
      },
      {
        "trait_type": "Wire Color",
        "value": "Pine Green"
      },
      {
        "trait_type": "Shape Color",
        "value": "Light Sea Green"
      },
      {
        "trait_type": "Emit Color",
        "value": "Persian Green"
      },
      {
        "trait_type": "Shadow Color",
        "value": "Midnight Green"
      },
      {
        "trait_type": "Noise Shadow Color",
        "value": "Midnight Green"
      },
      {
        "trait_type": "System Density",
        "value": 4
      },
      {
        "trait_type": "Wire Thickness",
        "value": "Web"
      },
      {
        "trait_type": "Emit Rate",
        "value": "Rapid"
      },
      {
        "trait_type": "Wobble Speed",
        "value": "Fast"
      },
      {
        "trait_type": "Wobble Amount",
        "value": "Rigid"
      },
      {
        "trait_type": "Paint Fade Color",
        "value": "Light Sea Green"
      }
    ],
    "image": "https://storage.googleapis.com/pings/previews/main/1.png",
    "animation_url": "data:text/html;base64,",
    "external_url": "https://twitter.com/BlockGenerative"
  }
}